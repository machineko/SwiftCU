{"sections":[],"identifier":{"url":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError","interfaceLanguage":"swift"},"topicSections":[{"title":"Enumeration Cases","anchor":"Enumeration-Cases","generated":true,"identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAddressOfConstant","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyAcquired","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyMapped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorApiFailureBase","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorArrayIsMapped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAssert","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCallRequiresNewerDriver","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCapturedEvent","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpNotSupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpVersionMismatch","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCompatNotSupportedOnDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorContextIsDestroyed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCooperativeLaunchTooLarge","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCudartUnloading","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceAlreadyInUse","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceNotLicensed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceUninitialized","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDevicesUnavailable","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateSurfaceName","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateTextureName","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateVariableName","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorECCUncorrectable","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorExternalDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorFileNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorGraphExecUpdateFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHardwareStackError","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryAlreadyRegistered","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryNotRegistered","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalAddress","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalInstruction","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalState","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIncompatibleDriverContext","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInitializationError","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInsufficientDriver","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidAddressSpace","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidChannelDescriptor","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidClusterSize","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidConfiguration","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDeviceFunction","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevicePointer","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidFilterSetting","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidGraphicsContext","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidHostPointer","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidKernelImage","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidMemcpyDirection","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidNormSetting","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPc","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPitchValue","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPtx","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidResourceHandle","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSource","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSurface","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSymbol","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTexture","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTextureBinding","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidValue","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilationDisabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilerNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedSurf","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedTex","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchIncompatibleTexturing","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchMaxDepthExceeded","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchOutOfResources","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchPendingCountExceeded","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchTimeout","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLossyQuery","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMapBufferObjectFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryAllocation","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryValueTooLarge","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMisalignedAddress","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMissingConfiguration","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMixedDeviceExecution","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsClientTerminated","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsConnectionFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxClientsReached","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxConnectionsReached","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsRpcFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsServerNotReady","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoKernelImageForDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMapped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsArray","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsPointer","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotPermitted","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotReady","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotSupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotYetImplemented","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNvlinkUncorrectable","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorOperatingSystem","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessAlreadyEnabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessNotEnabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessUnsupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPriorLaunchFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStarted","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStopped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerDisabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerNotInitialized","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSetOnActiveProcess","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectInitFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectSymbolNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSoftwareValidityNotEstablished","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStartupFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureImplicit","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureInvalidated","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureIsolation","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureMerge","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnjoined","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnmatched","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnsupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureWrongThread","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStubLibrary","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSymbolNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSyncDepthExceeded","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSynchronizationError","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemDriverMismatch","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemNotReady","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureFetchFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureNotBound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTimeout","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTooManyPeers","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnknown","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnmapBufferObjectFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedDevSideSync","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedExecAffinity","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedLimit","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedPtxVersion","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaSuccess"]},{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/init(rawValue:)"]},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/isSuccessful"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/safetyCheckCondition(message:)"]},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/Equatable-Implementations","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/RawRepresentable-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaError"}],"platforms":["Linux"],"languages":["swift"]}]}],"metadata":{"title":"cudaError","modules":[{"name":"SwiftCU"}],"symbolKind":"enum","roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaError","kind":"identifier"}],"navigatorTitle":[{"text":"cudaError","kind":"identifier"}],"role":"symbol","externalID":"s:7SwiftCU9cudaErrorO"},"variants":[{"paths":["\/documentation\/swiftcu\/cudaerror"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCU\/documentation\/SwiftCU"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/SwiftCU\/s8CopyableP","doc:\/\/SwiftCU\/SQ","doc:\/\/SwiftCU\/SH","doc:\/\/SwiftCU\/SY"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCompatNotSupportedOnDevice":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcompatnotsupportedondevice","title":"cudaError.cudaErrorCompatNotSupportedOnDevice","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCompatNotSupportedOnDevice","abstract":[{"type":"text","text":"This error indicates that the system was upgraded to run with forward compatibility"},{"type":"text","text":" "},{"type":"text","text":"but the visible hardware detected by CUDA does not support this configuration."},{"type":"text","text":" "},{"type":"text","text":"Refer to the compatibility documentation for the supported hardware matrix or ensure"},{"type":"text","text":" "},{"type":"text","text":"that only supported hardware is visible during initialization via the CUDA_VISIBLE_DEVICES"},{"type":"text","text":" "},{"type":"text","text":"environment variable."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorCompatNotSupportedOnDevice"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotYetImplemented":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotYetImplemented","kind":"identifier"}],"type":"topic","abstract":[{"text":"This indicates that the API call is not yet implemented. Production","type":"text"},{"text":" ","type":"text"},{"text":"releases of CUDA will never return this error.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 4.1.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotYetImplemented","title":"cudaError.cudaErrorNotYetImplemented","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotyetimplemented","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsClientTerminated":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMpsClientTerminated","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsclientterminated","abstract":[{"text":"This error indicates that the MPS client has been terminated by the server. To continue using CUDA, the process must be terminated and relaunched.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsClientTerminated","role":"symbol","title":"cudaError.cudaErrorMpsClientTerminated"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIllegalState":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalState","title":"cudaError.cudaErrorIllegalState","role":"symbol","abstract":[{"text":"This indicates that a resource required by the API call is not in a","type":"text"},{"text":" ","type":"text"},{"text":"valid state to perform the requested operation.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorIllegalState","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorillegalstate","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/Equatable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","url":"\/documentation\/swiftcu\/cudaerror\/equatable-implementations"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerDisabled":{"title":"cudaError.cudaErrorProfilerDisabled","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofilerdisabled","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorProfilerDisabled"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerDisabled","role":"symbol","abstract":[{"type":"text","text":"This indicates profiler is not initialized for this run. This can"},{"type":"text","text":" "},{"type":"text","text":"happen when the application is running with external profiling tools"},{"type":"text","text":" "},{"type":"text","text":"like visual profiler."}],"kind":"symbol","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsConnectionFailed":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsconnectionfailed","title":"cudaError.cudaErrorMpsConnectionFailed","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsConnectionFailed","abstract":[{"type":"text","text":"This error indicates that the MPS client failed to connect to the MPS control daemon or the MPS server."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsConnectionFailed"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchFileScopedSurf":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchfilescopedsurf","title":"cudaError.cudaErrorLaunchFileScopedSurf","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedSurf","abstract":[{"type":"text","text":"This error indicates that a grid launch did not occur because the kernel"},{"type":"text","text":" "},{"type":"text","text":"uses file-scoped surfaces which are unsupported by the device runtime."},{"type":"text","text":" "},{"type":"text","text":"Kernels launched via the device runtime only support surfaces created with"},{"type":"text","text":" "},{"type":"text","text":"the Surface Object API’s."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorLaunchFileScopedSurf"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSharedObjectSymbolNotFound":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsharedobjectsymbolnotfound","title":"cudaError.cudaErrorSharedObjectSymbolNotFound","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectSymbolNotFound","abstract":[{"type":"text","text":"This indicates that a link to a shared object failed to resolve."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSharedObjectSymbolNotFound"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorExternalDevice":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorexternaldevice","title":"cudaError.cudaErrorExternalDevice","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorExternalDevice","abstract":[{"type":"text","text":"This indicates that an async error has occurred in a device outside of CUDA."},{"type":"text","text":" "},{"type":"text","text":"If CUDA was waiting for an external device’s signal before consuming shared data,"},{"type":"text","text":" "},{"type":"text","text":"the external device signaled an error indicating that the data is not valid for"},{"type":"text","text":" "},{"type":"text","text":"consumption. This leaves the process in an inconsistent state and any further CUDA"},{"type":"text","text":" "},{"type":"text","text":"work will return the same error. To continue using CUDA, the process must be"},{"type":"text","text":" "},{"type":"text","text":"terminated and relaunched."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorExternalDevice"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotReady":{"role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotready","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNotReady"}],"abstract":[{"text":"This indicates that asynchronous operations issued previously have not","type":"text"},{"text":" ","type":"text"},{"text":"completed yet. This result is not actually an error, but must be indicated","type":"text"},{"text":" ","type":"text"},{"text":"differently than ::cudaSuccess (which indicates completion). Calls that","type":"text"},{"text":" ","type":"text"},{"text":"may return this value include ::cudaEventQuery() and ::cudaStreamQuery().","type":"text"}],"type":"topic","title":"cudaError.cudaErrorNotReady","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotReady","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDeviceNotLicensed":{"role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordevicenotlicensed","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDeviceNotLicensed"}],"abstract":[{"text":"This indicates that the device doesn’t have a valid Grid License.","type":"text"}],"type":"topic","title":"cudaError.cudaErrorDeviceNotLicensed","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceNotLicensed","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotPermitted":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotPermitted","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotpermitted","type":"topic","title":"cudaError.cudaErrorNotPermitted","abstract":[{"type":"text","text":"This error indicates the attempted operation is not permitted."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotPermitted","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedLimit":{"title":"cudaError.cudaErrorUnsupportedLimit","abstract":[{"type":"text","text":"This indicates that the ::cudaLimit passed to the API call is not"},{"type":"text","text":" "},{"type":"text","text":"supported by the active device."}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedLimit","kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupportedlimit","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorUnsupportedLimit","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSyncDepthExceeded":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSyncDepthExceeded","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsyncdepthexceeded","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorSyncDepthExceeded","kind":"identifier"}],"role":"symbol","title":"cudaError.cudaErrorSyncDepthExceeded","kind":"symbol","abstract":[{"text":"This error indicates that a call to ::cudaDeviceSynchronize made from","type":"text"},{"text":" ","type":"text"},{"text":"the device runtime failed because the call was made at grid depth greater","type":"text"},{"text":" ","type":"text"},{"text":"than than either the default (2 levels of grids) or user specified device","type":"text"},{"text":" ","type":"text"},{"text":"limit ::cudaLimitDevRuntimeSyncDepth. To be able to synchronize on","type":"text"},{"text":" ","type":"text"},{"text":"launched grids at a greater depth successfully, the maximum nested","type":"text"},{"text":" ","type":"text"},{"text":"depth at which ::cudaDeviceSynchronize will be called must be specified","type":"text"},{"text":" ","type":"text"},{"text":"with the ::cudaLimitDevRuntimeSyncDepth limit to the ::cudaDeviceSetLimit","type":"text"},{"text":" ","type":"text"},{"text":"api before the host-side launch of a kernel using the device runtime.","type":"text"},{"text":" ","type":"text"},{"text":"Keep in mind that additional levels of sync depth require the runtime","type":"text"},{"text":" ","type":"text"},{"text":"to reserve large amounts of device memory that cannot be used for","type":"text"},{"text":" ","type":"text"},{"text":"user allocations. Note that ::cudaDeviceSynchronize made from device","type":"text"},{"text":" ","type":"text"},{"text":"runtime is only supported on devices of compute capability < 9.0.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMemoryAllocation":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryAllocation","abstract":[{"type":"text","text":"The API call failed because it was unable to allocate enough memory or"},{"type":"text","text":" "},{"type":"text","text":"other resources to perform the requested operation."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMemoryAllocation"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormemoryallocation","kind":"symbol","title":"cudaError.cudaErrorMemoryAllocation","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnmapBufferObjectFailed":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnmapBufferObjectFailed","abstract":[{"type":"text","text":"This indicates that the buffer object could not be unmapped."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorUnmapBufferObjectFailed"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunmapbufferobjectfailed","kind":"symbol","title":"cudaError.cudaErrorUnmapBufferObjectFailed","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureWrongThread":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureWrongThread","abstract":[{"type":"text","text":"A stream capture sequence not initiated with the ::cudaStreamCaptureModeRelaxed"},{"type":"text","text":" "},{"type":"text","text":"argument to ::cudaStreamBeginCapture was passed to ::cudaStreamEndCapture in a"},{"type":"text","text":" "},{"type":"text","text":"different thread."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureWrongThread"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcapturewrongthread","kind":"symbol","title":"cudaError.cudaErrorStreamCaptureWrongThread","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidClusterSize":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidClusterSize","abstract":[{"type":"text","text":"This indicates that a kernel launch error has occurred due to cluster"},{"type":"text","text":" "},{"type":"text","text":"misconfiguration."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidClusterSize"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidclustersize","kind":"symbol","title":"cudaError.cudaErrorInvalidClusterSize","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotMappedAsPointer":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotMappedAsPointer","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"cudaError.cudaErrorNotMappedAsPointer","abstract":[{"type":"text","text":"This indicates that a mapped resource is not available for access as a"},{"type":"text","text":" "},{"type":"text","text":"pointer."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotmappedaspointer","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsPointer"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorContextIsDestroyed":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorContextIsDestroyed","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcontextisdestroyed","abstract":[{"type":"text","text":"This error indicates that the context current to the calling thread"},{"type":"text","text":" "},{"type":"text","text":"has been destroyed using ::cuCtxDestroy, or is a primary context which"},{"type":"text","text":" "},{"type":"text","text":"has not yet been initialized."}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorContextIsDestroyed","role":"symbol","title":"cudaError.cudaErrorContextIsDestroyed"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaSuccess":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaSuccess","abstract":[{"type":"text","text":"The API call returned with no errors. In the case of query calls, this"},{"type":"text","text":" "},{"type":"text","text":"also means that the operation being queried is complete (see"},{"type":"text","text":" "},{"type":"text","text":"::cudaEventQuery() and ::cudaStreamQuery())."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaSuccess"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudasuccess","kind":"symbol","title":"cudaError.cudaSuccess","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidKernelImage":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidKernelImage","abstract":[{"type":"text","text":"This indicates that the device kernel image is invalid."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidKernelImage"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidkernelimage","kind":"symbol","title":"cudaError.cudaErrorInvalidKernelImage","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidNormSetting":{"title":"cudaError.cudaErrorInvalidNormSetting","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidnormsetting","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidNormSetting","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidNormSetting","role":"symbol","abstract":[{"text":"This indicates that an attempt was made to read a non-float texture as a","type":"text"},{"text":" ","type":"text"},{"text":"normalized float. This is not supported by CUDA.","type":"text"}],"kind":"symbol","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnknown":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnknown","abstract":[{"type":"text","text":"This indicates that an unknown internal error has occurred."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorUnknown"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunknown","kind":"symbol","title":"cudaError.cudaErrorUnknown","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidResourceHandle":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidResourceHandle"}],"type":"topic","abstract":[{"text":"This indicates that a resource handle passed to the API call was not","type":"text"},{"text":" ","type":"text"},{"text":"valid. Resource handles are opaque types like ::cudaStream_t and","type":"text"},{"text":" ","type":"text"},{"text":"::cudaEvent_t.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidResourceHandle","title":"cudaError.cudaErrorInvalidResourceHandle","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidresourcehandle","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSynchronizationError":{"abstract":[{"type":"text","text":"This indicated that a synchronization operation had failed."},{"type":"text","text":" "},{"type":"text","text":"This was previously used for some device emulation functions."},{"type":"text","text":" "},{"type":"text","text":"\\deprecated"},{"type":"text","text":" "},{"type":"text","text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was"},{"type":"text","text":" "},{"type":"text","text":"removed with the CUDA 3.1 release."}],"title":"cudaError.cudaErrorSynchronizationError","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsynchronizationerror","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSynchronizationError"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSynchronizationError"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSetOnActiveProcess":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSetOnActiveProcess","abstract":[{"type":"text","text":"This indicates that the user has called ::cudaSetValidDevices(),"},{"type":"text","text":" "},{"type":"text","text":"::cudaSetDeviceFlags(), ::cudaD3D9SetDirect3DDevice(),"},{"type":"text","text":" "},{"type":"text","text":"::cudaD3D10SetDirect3DDevice, ::cudaD3D11SetDirect3DDevice(), or"},{"type":"text","text":" "},{"type":"text","text":"::cudaVDPAUSetVDPAUDevice() after initializing the CUDA runtime by"},{"type":"text","text":" "},{"type":"text","text":"calling non-device management operations (allocating memory and"},{"type":"text","text":" "},{"type":"text","text":"launching kernels are examples of non-device management operations)."},{"type":"text","text":" "},{"type":"text","text":"This error can also be returned if using runtime\/driver"},{"type":"text","text":" "},{"type":"text","text":"interoperability and there is an existing ::CUcontext active on the"},{"type":"text","text":" "},{"text":"host thread.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSetOnActiveProcess"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsetonactiveprocess","kind":"symbol","title":"cudaError.cudaErrorSetOnActiveProcess","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMisalignedAddress":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMisalignedAddress","abstract":[{"type":"text","text":"The device encountered a load or store instruction"},{"type":"text","text":" "},{"type":"text","text":"on a memory address which is not aligned."},{"type":"text","text":" "},{"type":"text","text":"This leaves the process in an inconsistent state and any further CUDA work"},{"type":"text","text":" "},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"type":"text","text":" "},{"type":"text","text":"and relaunched."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMisalignedAddress"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormisalignedaddress","kind":"symbol","title":"cudaError.cudaErrorMisalignedAddress","role":"symbol"},"doc://SwiftCU/SH":{"type":"unresolvable","identifier":"doc:\/\/SwiftCU\/SH","title":"Swift.Hashable"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDuplicateSurfaceName":{"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorduplicatesurfacename","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDuplicateSurfaceName"}],"kind":"symbol","title":"cudaError.cudaErrorDuplicateSurfaceName","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateSurfaceName","abstract":[{"text":"This indicates that multiple surfaces (across separate CUDA source","type":"text"},{"text":" ","type":"text"},{"text":"files in the application) share the same string name.","type":"text"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSymbolNotFound":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSymbolNotFound","abstract":[{"type":"text","text":"This indicates that a named symbol was not found. Examples of symbols"},{"type":"text","text":" "},{"type":"text","text":"are global\/constant variable names, driver function names, texture names,"},{"type":"text","text":" "},{"type":"text","text":"and surface names."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSymbolNotFound"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsymbolnotfound","kind":"symbol","title":"cudaError.cudaErrorSymbolNotFound","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchFailure":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFailure","title":"cudaError.cudaErrorLaunchFailure","role":"symbol","abstract":[{"type":"text","text":"An exception occurred on the device while executing a kernel. Common"},{"type":"text","text":" "},{"type":"text","text":"causes include dereferencing an invalid device pointer and accessing"},{"type":"text","text":" "},{"type":"text","text":"out of bounds shared memory. Less common cases can be system specific - more"},{"type":"text","text":" "},{"type":"text","text":"information about these cases can be found in the system specific user guide."},{"type":"text","text":" "},{"type":"text","text":"This leaves the process in an inconsistent state and any further CUDA work"},{"type":"text","text":" "},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"type":"text","text":" "},{"type":"text","text":"and relaunched."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchFailure","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchfailure","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCapturedEvent":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCapturedEvent","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorCapturedEvent","kind":"identifier"}],"abstract":[{"text":"The operation is not permitted on an event which was last recorded in a","type":"text"},{"text":" ","type":"text"},{"text":"capturing stream.","type":"text"}],"title":"cudaError.cudaErrorCapturedEvent","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcapturedevent","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTextureNotBound":{"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorTextureNotBound"}],"kind":"symbol","role":"symbol","title":"cudaError.cudaErrorTextureNotBound","abstract":[{"text":"This indicated that a texture was not bound for access.","type":"text"},{"text":" ","type":"text"},{"text":"This was previously used for device emulation of texture operations.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortexturenotbound","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureNotBound"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureInvalidated":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureInvalidated","abstract":[{"type":"text","text":"The current capture sequence on the stream has been invalidated due to"},{"type":"text","text":" "},{"type":"text","text":"a previous error."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureInvalidated"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureinvalidated","kind":"symbol","title":"cudaError.cudaErrorStreamCaptureInvalidated","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/RawRepresentable-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/rawrepresentable-implementations","abstract":[],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/RawRepresentable-Implementations","role":"collectionGroup","title":"RawRepresentable Implementations"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsServerNotReady":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsServerNotReady","abstract":[{"type":"text","text":"This error indicates that the MPS server is not ready to accept new MPS client requests."},{"type":"text","text":" "},{"type":"text","text":"This error can be returned when the MPS server is in the process of recovering from a fatal failure."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsServerNotReady"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsservernotready","kind":"symbol","title":"cudaError.cudaErrorMpsServerNotReady","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU":{"role":"collection","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU","kind":"symbol","title":"SwiftCU","url":"\/documentation\/swiftcu","abstract":[],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidPc":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPc","abstract":[{"type":"text","text":"The device encountered an invalid program counter."},{"type":"text","text":" "},{"type":"text","text":"This leaves the process in an inconsistent state and any further CUDA work"},{"type":"text","text":" "},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"type":"text","text":" "},{"type":"text","text":"and relaunched."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidPc"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidpc","kind":"symbol","title":"cudaError.cudaErrorInvalidPc","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInsufficientDriver":{"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInsufficientDriver","kind":"symbol","title":"cudaError.cudaErrorInsufficientDriver","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinsufficientdriver","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInsufficientDriver"}],"abstract":[{"text":"This indicates that the installed NVIDIA CUDA driver is older than the","type":"text"},{"text":" ","type":"text"},{"text":"CUDA runtime library. This is not a supported configuration. Users should","type":"text"},{"text":" ","type":"text"},{"text":"install an updated NVIDIA display driver to allow the application to run.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTextureFetchFailed":{"abstract":[{"text":"This indicated that a texture fetch was not able to be performed.","type":"text"},{"text":" ","type":"text"},{"text":"This was previously used for device emulation of texture operations.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"title":"cudaError.cudaErrorTextureFetchFailed","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortexturefetchfailed","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorTextureFetchFailed","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureFetchFailed"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidGraphicsContext":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidGraphicsContext","abstract":[{"type":"text","text":"This indicates an error with the OpenGL or DirectX context."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidGraphicsContext"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidgraphicscontext","kind":"symbol","title":"cudaError.cudaErrorInvalidGraphicsContext","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidValue":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidValue","abstract":[{"type":"text","text":"This indicates that one or more of the parameters passed to the API call"},{"type":"text","text":" "},{"type":"text","text":"is not within an acceptable range of values."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidValue"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidvalue","kind":"symbol","title":"cudaError.cudaErrorInvalidValue","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidAddressSpace":{"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidAddressSpace","abstract":[{"type":"text","text":"While executing a kernel, the device encountered an instruction"},{"type":"text","text":" "},{"type":"text","text":"which can only operate on memory locations in certain address spaces"},{"type":"text","text":" "},{"type":"text","text":"(global, shared, or local), but was supplied a memory address not"},{"type":"text","text":" "},{"type":"text","text":"belonging to an allowed address space."},{"type":"text","text":" "},{"type":"text","text":"This leaves the process in an inconsistent state and any further CUDA work"},{"type":"text","text":" "},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cudaErrorInvalidAddressSpace"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidaddressspace","kind":"symbol","title":"cudaError.cudaErrorInvalidAddressSpace","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/init(rawValue:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"title":"init(rawValue:)","url":"\/documentation\/swiftcu\/cudaerror\/init(rawvalue:)","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNoDevice":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornodevice","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoDevice","title":"cudaError.cudaErrorNoDevice","abstract":[{"text":"This indicates that no CUDA-capable devices were detected by the installed","type":"text"},{"text":" ","type":"text"},{"text":"CUDA driver.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNoDevice"}],"type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMapBufferObjectFailed":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMapBufferObjectFailed","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"This indicates that the buffer object could not be mapped."}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMapBufferObjectFailed","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormapbufferobjectfailed","title":"cudaError.cudaErrorMapBufferObjectFailed","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidSymbol":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidsymbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSymbol","title":"cudaError.cudaErrorInvalidSymbol","abstract":[{"text":"This indicates that the symbol name\/identifier passed to the API call","type":"text"},{"text":" ","type":"text"},{"text":"is not a valid name or identifier.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidSymbol"}],"type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAssert":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorAssert"}],"type":"topic","abstract":[{"text":"An assert triggered in device code during kernel execution. The device","type":"text"},{"text":" ","type":"text"},{"text":"cannot be used again. All existing allocations are invalid. To continue","type":"text"},{"text":" ","type":"text"},{"text":"using CUDA, the process must be terminated and relaunched.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAssert","title":"cudaError.cudaErrorAssert","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorassert","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorJitCompilerNotFound":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorJitCompilerNotFound"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorjitcompilernotfound","abstract":[{"type":"text","text":"This indicates that the PTX JIT compiler library was not found. The JIT Compiler"},{"type":"text","text":" "},{"type":"text","text":"library is used for PTX compilation. The runtime may fall back to compiling PTX"},{"type":"text","text":" "},{"type":"text","text":"if an application does not contain a suitable binary for the current device."}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilerNotFound","role":"symbol","title":"cudaError.cudaErrorJitCompilerNotFound"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCooperativeLaunchTooLarge":{"abstract":[{"text":"This error indicates that the number of blocks launched per grid for a kernel that was","type":"text"},{"text":" ","type":"text"},{"text":"launched via either ::cudaLaunchCooperativeKernel or ::cudaLaunchCooperativeKernelMultiDevice","type":"text"},{"text":" ","type":"text"},{"text":"exceeds the maximum number of blocks as allowed by ::cudaOccupancyMaxActiveBlocksPerMultiprocessor","type":"text"},{"text":" ","type":"text"},{"text":"or ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags times the number of multiprocessors","type":"text"},{"text":" ","type":"text"},{"text":"as specified by the device attribute ::cudaDevAttrMultiProcessorCount.","type":"text"}],"title":"cudaError.cudaErrorCooperativeLaunchTooLarge","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcooperativelaunchtoolarge","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorCooperativeLaunchTooLarge","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCooperativeLaunchTooLarge"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCdpNotSupported":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcdpnotsupported","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpNotSupported","title":"cudaError.cudaErrorCdpNotSupported","abstract":[{"text":"This error indicates, that the program is using CUDA Dynamic Parallelism, but the current configuration, like MPS, does not support it.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorCdpNotSupported"}],"type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureMerge":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcapturemerge","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureMerge","title":"cudaError.cudaErrorStreamCaptureMerge","abstract":[{"text":"The operation would have resulted in a merge of two independent capture","type":"text"},{"text":" ","type":"text"},{"text":"sequences.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureMerge"}],"type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedDevSideSync":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorUnsupportedDevSideSync","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupporteddevsidesync","role":"symbol","type":"topic","abstract":[{"text":"This indicates that the code to be compiled by the PTX JIT contains","type":"text"},{"text":" ","type":"text"},{"text":"unsupported call to cudaDeviceSynchronize.","type":"text"}],"title":"cudaError.cudaErrorUnsupportedDevSideSync","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedDevSideSync"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidDeviceFunction":{"type":"topic","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvaliddevicefunction","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDeviceFunction","abstract":[{"text":"The requested device function does not exist or is not compiled for the","type":"text"},{"text":" ","type":"text"},{"text":"proper device architecture.","type":"text"}],"title":"cudaError.cudaErrorInvalidDeviceFunction","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidDeviceFunction"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidPitchValue":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPitchValue","title":"cudaError.cudaErrorInvalidPitchValue","role":"symbol","abstract":[{"text":"This indicates that one or more of the pitch-related parameters passed","type":"text"},{"text":" ","type":"text"},{"text":"to the API call is not within the acceptable range for pitch.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidPitchValue"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidpitchvalue","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorHostMemoryNotRegistered":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorHostMemoryNotRegistered"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorhostmemorynotregistered","abstract":[{"text":"This error indicates that the pointer passed to ::cudaHostUnregister()","type":"text"},{"text":" ","type":"text"},{"text":"does not correspond to any currently registered memory region.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryNotRegistered","role":"symbol","title":"cudaError.cudaErrorHostMemoryNotRegistered"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchOutOfResources":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchOutOfResources","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchoutofresources","abstract":[{"text":"This indicates that a launch did not occur because it did not have","type":"text"},{"text":" ","type":"text"},{"text":"appropriate resources. Although this error is similar to","type":"text"},{"text":" ","type":"text"},{"text":"::cudaErrorInvalidConfiguration, this error usually indicates that the","type":"text"},{"text":" ","type":"text"},{"text":"user has attempted to pass too many arguments to the device kernel, or the","type":"text"},{"text":" ","type":"text"},{"text":"kernel launch specifies too many threads for the kernel’s register count.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchOutOfResources","role":"symbol","title":"cudaError.cudaErrorLaunchOutOfResources"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDuplicateVariableName":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorDuplicateVariableName","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"This indicates that multiple global or constant variables (across separate"},{"type":"text","text":" "},{"type":"text","text":"CUDA source files in the application) share the same string name."}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateVariableName","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorduplicatevariablename","title":"cudaError.cudaErrorDuplicateVariableName","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPeerAccessUnsupported":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessUnsupported","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorPeerAccessUnsupported"}],"abstract":[{"type":"text","text":"This error indicates that P2P access is not supported across the given"},{"type":"text","text":" "},{"type":"text","text":"devices."}],"title":"cudaError.cudaErrorPeerAccessUnsupported","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpeeraccessunsupported","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDeviceAlreadyInUse":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceAlreadyInUse","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorDeviceAlreadyInUse","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"This indicates that a call tried to access an exclusive-thread device that"},{"type":"text","text":" "},{"type":"text","text":"is already in use by a different thread."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordevicealreadyinuse","role":"symbol","title":"cudaError.cudaErrorDeviceAlreadyInUse"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSoftwareValidityNotEstablished":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cudaErrorSoftwareValidityNotEstablished"}],"kind":"symbol","title":"cudaError.cudaErrorSoftwareValidityNotEstablished","type":"topic","abstract":[{"text":"By default, the CUDA runtime may perform a minimal set of self-tests,","type":"text"},{"text":" ","type":"text"},{"text":"as well as CUDA driver tests, to establish the validity of both.","type":"text"},{"text":" ","type":"text"},{"text":"Introduced in CUDA 11.2, this error return indicates that at least one","type":"text"},{"text":" ","type":"text"},{"text":"of these tests has failed and the validity of either the runtime","type":"text"},{"text":" ","type":"text"},{"text":"or the driver could not be established.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsoftwarevaliditynotestablished","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSoftwareValidityNotEstablished"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidSource":{"title":"cudaError.cudaErrorInvalidSource","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidsource","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidSource","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSource","role":"symbol","abstract":[{"text":"This indicates that the device kernel source is invalid.","type":"text"}],"kind":"symbol","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCdpVersionMismatch":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorCdpVersionMismatch","kind":"identifier"}],"kind":"symbol","title":"cudaError.cudaErrorCdpVersionMismatch","type":"topic","abstract":[{"text":"This error indicates, that the program contains an unsupported interaction between different versions of CUDA Dynamic Parallelism.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcdpversionmismatch","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpVersionMismatch"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSystemDriverMismatch":{"type":"topic","role":"symbol","abstract":[{"text":"This error indicates that there is a mismatch between the versions of","type":"text"},{"text":" ","type":"text"},{"text":"the display driver and the CUDA driver. Refer to the compatibility documentation","type":"text"},{"text":" ","type":"text"},{"text":"for supported versions.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemDriverMismatch","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSystemDriverMismatch"}],"title":"cudaError.cudaErrorSystemDriverMismatch","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsystemdrivermismatch"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorGraphExecUpdateFailure":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorGraphExecUpdateFailure","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorGraphExecUpdateFailure","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorgraphexecupdatefailure","abstract":[{"text":"This error indicates that the graph update was not performed because it included","type":"text"},{"text":" ","type":"text"},{"text":"changes which violated constraints specific to instantiated graph update.","type":"text"}],"title":"cudaError.cudaErrorGraphExecUpdateFailure","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIllegalAddress":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorIllegalAddress","kind":"identifier"}],"kind":"symbol","title":"cudaError.cudaErrorIllegalAddress","type":"topic","abstract":[{"text":"The device encountered a load or store instruction on an invalid memory address.","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorillegaladdress","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalAddress"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotMapped":{"type":"topic","role":"symbol","abstract":[{"text":"This indicates that a resource is not mapped.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMapped","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotMapped","kind":"identifier"}],"title":"cudaError.cudaErrorNotMapped","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotmapped"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchFileScopedTex":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchFileScopedTex","kind":"identifier"}],"kind":"symbol","title":"cudaError.cudaErrorLaunchFileScopedTex","type":"topic","abstract":[{"text":"This error indicates that a grid launch did not occur because the kernel","type":"text"},{"text":" ","type":"text"},{"text":"uses file-scoped textures which are unsupported by the device runtime.","type":"text"},{"text":" ","type":"text"},{"text":"Kernels launched via the device runtime only support textures created with","type":"text"},{"text":" ","type":"text"},{"text":"the Texture Object API’s.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchfilescopedtex","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedTex"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorOperatingSystem":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerroroperatingsystem","title":"cudaError.cudaErrorOperatingSystem","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorOperatingSystem","kind":"identifier"}],"abstract":[{"text":"This error indicates that an OS call failed.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorOperatingSystem","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/safetyCheckCondition(message:)":{"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/safetyCheckCondition(message:)","kind":"symbol","title":"safetyCheckCondition(message:)","url":"\/documentation\/swiftcu\/cudaerror\/safetycheckcondition(message:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"safetyCheckCondition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"Checks the condition and throws a precondition failure if the error is not successful.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAlreadyAcquired":{"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerroralreadyacquired","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorAlreadyAcquired","kind":"identifier"}],"kind":"symbol","title":"cudaError.cudaErrorAlreadyAcquired","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyAcquired","abstract":[{"type":"text","text":"This indicates that a resource has already been acquired."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCallRequiresNewerDriver":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcallrequiresnewerdriver","title":"cudaError.cudaErrorCallRequiresNewerDriver","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorCallRequiresNewerDriver","kind":"identifier"}],"abstract":[{"text":"This indicates that the API call requires a newer CUDA driver than the one","type":"text"},{"text":" ","type":"text"},{"text":"currently installed. Users should install an updated NVIDIA CUDA driver","type":"text"},{"text":" ","type":"text"},{"text":"to allow the API call to succeed.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCallRequiresNewerDriver","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorFileNotFound":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorFileNotFound","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorfilenotfound","abstract":[{"type":"text","text":"This indicates that the file specified was not found."}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorFileNotFound","role":"symbol","title":"cudaError.cudaErrorFileNotFound"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchTimeout":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchTimeout","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchTimeout","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchtimeout","abstract":[{"text":"This indicates that the device kernel took too long to execute. This can","type":"text"},{"text":" ","type":"text"},{"text":"only occur if timeouts are enabled - see the device property","type":"text"},{"text":" ","type":"text"},{"text":"\\ref ::cudaDeviceProp::kernelExecTimeoutEnabled “kernelExecTimeoutEnabled”","type":"text"},{"text":" ","type":"text"},{"text":"for more information.","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"title":"cudaError.cudaErrorLaunchTimeout","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/isSuccessful":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isSuccessful","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","abstract":[{"text":"Checks if the error represents a successful CUDA operation.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/isSuccessful","title":"isSuccessful","url":"\/documentation\/swiftcu\/cudaerror\/issuccessful","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorJitCompilationDisabled":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorJitCompilationDisabled","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilationDisabled","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorjitcompilationdisabled","abstract":[{"text":"This indicates that the JIT compilation was disabled. The JIT compilation compiles","type":"text"},{"text":" ","type":"text"},{"text":"PTX. The runtime may fall back to compiling PTX if an application does not contain","type":"text"},{"text":" ","type":"text"},{"text":"a suitable binary for the current device.","type":"text"}],"title":"cudaError.cudaErrorJitCompilationDisabled","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaError"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"cudaError"}],"title":"cudaError","url":"\/documentation\/swiftcu\/cudaerror","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureUnsupported":{"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnsupported","kind":"symbol","title":"cudaError.cudaErrorStreamCaptureUnsupported","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureunsupported","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureUnsupported"}],"abstract":[{"type":"text","text":"The operation is not permitted when the stream is capturing."}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureUnmatched":{"abstract":[{"type":"text","text":"The capture was not initiated in this stream."}],"title":"cudaError.cudaErrorStreamCaptureUnmatched","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureunmatched","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorStreamCaptureUnmatched","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnmatched"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidChannelDescriptor":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidchanneldescriptor","title":"cudaError.cudaErrorInvalidChannelDescriptor","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidChannelDescriptor","kind":"identifier"}],"abstract":[{"text":"This indicates that the channel descriptor passed to the API call is not","type":"text"},{"text":" ","type":"text"},{"text":"valid. This occurs if the format is not one of the formats specified by","type":"text"},{"text":" ","type":"text"},{"text":"::cudaChannelFormatKind, or if one of the dimensions is invalid.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidChannelDescriptor","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSystemNotReady":{"abstract":[{"type":"text","text":"This error indicates that the system is not yet ready to start any CUDA"},{"type":"text","text":" "},{"type":"text","text":"work.  To continue using CUDA, verify the system configuration is in a"},{"type":"text","text":" "},{"type":"text","text":"valid state and all required driver daemons are actively running."},{"type":"text","text":" "},{"type":"text","text":"More information about this error can be found in the system specific"},{"type":"text","text":" "},{"type":"text","text":"user guide."}],"title":"cudaError.cudaErrorSystemNotReady","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsystemnotready","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSystemNotReady"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemNotReady"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPeerAccessAlreadyEnabled":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpeeraccessalreadyenabled","title":"cudaError.cudaErrorPeerAccessAlreadyEnabled","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorPeerAccessAlreadyEnabled","kind":"identifier"}],"abstract":[{"text":"This error indicates that a call to ::cudaDeviceEnablePeerAccess() is","type":"text"},{"text":" ","type":"text"},{"text":"trying to re-enable peer addressing on from a context which has already","type":"text"},{"text":" ","type":"text"},{"text":"had peer addressing enabled.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessAlreadyEnabled","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNoKernelImageForDevice":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNoKernelImageForDevice"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornokernelimagefordevice","abstract":[{"text":"This indicates that there is no kernel image available that is suitable","type":"text"},{"text":" ","type":"text"},{"text":"for the device. This can occur when a user specifies code generation","type":"text"},{"text":" ","type":"text"},{"text":"options for a particular CUDA source file that do not include the","type":"text"},{"text":" ","type":"text"},{"text":"corresponding device configuration.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoKernelImageForDevice","role":"symbol","title":"cudaError.cudaErrorNoKernelImageForDevice"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidSurface":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidSurface","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSurface","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidsurface","abstract":[{"type":"text","text":"This indicates that the surface passed to the API call is not a valid"},{"type":"text","text":" "},{"type":"text","text":"surface."}],"title":"cudaError.cudaErrorInvalidSurface","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDevicesUnavailable":{"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordevicesunavailable","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorDevicesUnavailable","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"cudaError.cudaErrorDevicesUnavailable","abstract":[{"text":"This indicates that all CUDA devices are busy or unavailable at the current","type":"text"},{"text":" ","type":"text"},{"text":"time. Devices are often busy\/unavailable due to use of","type":"text"},{"text":" ","type":"text"},{"text":"::cudaComputeModeProhibited, ::cudaComputeModeExclusiveProcess, or when long","type":"text"},{"text":" ","type":"text"},{"text":"running CUDA kernels have filled up the GPU and are blocking new work","type":"text"},{"text":" ","type":"text"},{"text":"from starting. They can also be unavailable due to memory constraints","type":"text"},{"text":" ","type":"text"},{"text":"on a device that already has active CUDA work being performed.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDevicesUnavailable"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedExecAffinity":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorUnsupportedExecAffinity","kind":"identifier"}],"type":"topic","abstract":[{"text":"This indicates that the provided execution affinity is not supported by the device.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedExecAffinity","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupportedexecaffinity","title":"cudaError.cudaErrorUnsupportedExecAffinity","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchIncompatibleTexturing":{"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchincompatibletexturing","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchIncompatibleTexturing","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"cudaError.cudaErrorLaunchIncompatibleTexturing","abstract":[{"text":"This error indicates a kernel launch that uses an incompatible texturing","type":"text"},{"text":" ","type":"text"},{"text":"mode.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchIncompatibleTexturing"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsMaxConnectionsReached":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMpsMaxConnectionsReached","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxConnectionsReached","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsmaxconnectionsreached","type":"topic","role":"symbol","title":"cudaError.cudaErrorMpsMaxConnectionsReached","abstract":[{"text":"This error indicates the the hardware resources required to device connections have been exhausted.","type":"text"}]},"doc://SwiftCU/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwiftCU\/SQ"},"doc://SwiftCU/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/SwiftCU\/SY"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidDevicePointer":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvaliddevicepointer","type":"topic","title":"cudaError.cudaErrorInvalidDevicePointer","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevicePointer","role":"symbol","abstract":[{"text":"This indicates that at least one device pointer passed to the API call is","type":"text"},{"text":" ","type":"text"},{"text":"not a valid device pointer.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 10.1.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidDevicePointer","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDeviceUninitialized":{"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordeviceuninitialized","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDeviceUninitialized"}],"kind":"symbol","title":"cudaError.cudaErrorDeviceUninitialized","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceUninitialized","abstract":[{"type":"text","text":"This most frequently indicates that there is no context bound to the"},{"type":"text","text":" "},{"type":"text","text":"current thread. This can also be returned if the context passed to an"},{"type":"text","text":" "},{"type":"text","text":"API call is not a valid handle (such as a context that has had"},{"type":"text","text":" "},{"type":"text","text":"::cuCtxDestroy() invoked on it). This can also be returned if a user"},{"type":"text","text":" "},{"type":"text","text":"mixes different API versions (i.e. 3010 context with 3020 API calls)."},{"type":"text","text":" "},{"type":"text","text":"See ::cuCtxGetApiVersion() for more details."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerAlreadyStarted":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofileralreadystarted","type":"topic","title":"cudaError.cudaErrorProfilerAlreadyStarted","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStarted","role":"symbol","abstract":[{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 5.0. It is no longer an error","type":"text"},{"text":" ","type":"text"},{"text":"to call cudaProfilerStart() when profiling is already enabled.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorProfilerAlreadyStarted","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorApiFailureBase":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorApiFailureBase","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorApiFailureBase","kind":"identifier"}],"abstract":[{"type":"text","text":"Any unhandled CUDA driver error is added to this value and returned via"},{"type":"text","text":" "},{"type":"text","text":"the runtime. Production releases of CUDA should not return such errors."},{"type":"text","text":" "},{"type":"text","text":"\\deprecated"},{"type":"text","text":" "},{"type":"text","text":"This error return is deprecated as of CUDA 4.1."}],"title":"cudaError.cudaErrorApiFailureBase","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorapifailurebase","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureUnjoined":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnjoined","title":"cudaError.cudaErrorStreamCaptureUnjoined","role":"symbol","abstract":[{"text":"The capture sequence contains a fork that was not joined to the primary","type":"text"},{"text":" ","type":"text"},{"text":"stream.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureUnjoined"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureunjoined","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorHardwareStackError":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorhardwarestackerror","type":"topic","title":"cudaError.cudaErrorHardwareStackError","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHardwareStackError","role":"symbol","abstract":[{"text":"Device encountered an error in the call stack during kernel execution,","type":"text"},{"text":" ","type":"text"},{"text":"possibly due to stack corruption or exceeding the stack size limit.","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorHardwareStackError","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIncompatibleDriverContext":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIncompatibleDriverContext","title":"cudaError.cudaErrorIncompatibleDriverContext","role":"symbol","abstract":[{"type":"text","text":"This indicates that the current context is not compatible with this"},{"type":"text","text":" "},{"type":"text","text":"the CUDA Runtime. This can only occur if you are using CUDA"},{"type":"text","text":" "},{"type":"text","text":"Runtime\/Driver interoperability and have created an existing Driver"},{"type":"text","text":" "},{"type":"text","text":"context using the driver API. The Driver context may be incompatible"},{"type":"text","text":" "},{"type":"text","text":"either because the Driver context was created using an older version"},{"type":"text","text":" "},{"type":"text","text":"of the API, because the Runtime API call expects a primary driver"},{"type":"text","text":" "},{"type":"text","text":"context and the Driver context is not primary, or because the Driver"},{"type":"text","text":" "},{"type":"text","text":"context has been destroyed. Please see \\ref CUDART_DRIVER “Interactions"},{"type":"text","text":" "},{"type":"text","text":"with the CUDA Driver API” for more information."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorIncompatibleDriverContext","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorincompatibledrivercontext","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchPendingCountExceeded":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchpendingcountexceeded","type":"topic","title":"cudaError.cudaErrorLaunchPendingCountExceeded","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchPendingCountExceeded","role":"symbol","abstract":[{"text":"This error indicates that a device runtime grid launch failed because","type":"text"},{"text":" ","type":"text"},{"text":"the launch would exceed the limit ::cudaLimitDevRuntimePendingLaunchCount.","type":"text"},{"text":" ","type":"text"},{"text":"For this launch to proceed successfully, ::cudaDeviceSetLimit must be","type":"text"},{"text":" ","type":"text"},{"text":"called to set the ::cudaLimitDevRuntimePendingLaunchCount to be higher","type":"text"},{"text":" ","type":"text"},{"text":"than the upper bound of outstanding launches that can be issued to the","type":"text"},{"text":" ","type":"text"},{"text":"device runtime. Keep in mind that raising the limit of pending device","type":"text"},{"text":" ","type":"text"},{"text":"runtime launches will require the runtime to reserve device memory that","type":"text"},{"text":" ","type":"text"},{"text":"cannot be used for user allocations.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchPendingCountExceeded","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotSupported":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotsupported","type":"topic","title":"cudaError.cudaErrorNotSupported","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotSupported","role":"symbol","abstract":[{"text":"This error indicates the attempted operation is not supported","type":"text"},{"text":" ","type":"text"},{"text":"on the current system or device.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotSupported","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidPtx":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPtx","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidPtx"}],"abstract":[{"type":"text","text":"A PTX compilation failed. The runtime may fall back to compiling PTX if"},{"type":"text","text":" "},{"type":"text","text":"an application does not contain a suitable binary for the current device."}],"title":"cudaError.cudaErrorInvalidPtx","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidptx","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureIsolation":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureIsolation"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureisolation","abstract":[{"text":"A dependency would have been created which crosses the capture sequence","type":"text"},{"text":" ","type":"text"},{"text":"boundary. Only implicit in-stream ordering dependencies are allowed to","type":"text"},{"text":" ","type":"text"},{"text":"cross the boundary.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureIsolation","role":"symbol","title":"cudaError.cudaErrorStreamCaptureIsolation"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerNotInitialized":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofilernotinitialized","type":"topic","title":"cudaError.cudaErrorProfilerNotInitialized","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerNotInitialized","role":"symbol","abstract":[{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 5.0. It is no longer an error","type":"text"},{"text":" ","type":"text"},{"text":"to attempt to enable\/disable the profiling via ::cudaProfilerStart or","type":"text"},{"text":" ","type":"text"},{"text":"::cudaProfilerStop without initialization.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorProfilerNotInitialized","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotMappedAsArray":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotmappedasarray","type":"topic","title":"cudaError.cudaErrorNotMappedAsArray","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsArray","role":"symbol","abstract":[{"text":"This indicates that a mapped resource is not available for access as an","type":"text"},{"text":" ","type":"text"},{"text":"array.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotMappedAsArray","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidMemcpyDirection":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidMemcpyDirection","kind":"identifier"}],"type":"topic","abstract":[{"text":"This indicates that the direction of the memcpy passed to the API call is","type":"text"},{"text":" ","type":"text"},{"text":"not one of the types specified by ::cudaMemcpyKind.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidMemcpyDirection","title":"cudaError.cudaErrorInvalidMemcpyDirection","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidmemcpydirection","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCudartUnloading":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCudartUnloading","abstract":[{"type":"text","text":"This indicates that a CUDA Runtime API call cannot be executed because"},{"type":"text","text":" "},{"type":"text","text":"it is being called during process shut down, at a point in time after"},{"type":"text","text":" "},{"type":"text","text":"CUDA driver has been unloaded."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcudartunloading","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorCudartUnloading"}],"type":"topic","title":"cudaError.cudaErrorCudartUnloading","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidFilterSetting":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidFilterSetting","abstract":[{"type":"text","text":"This indicates that a non-float texture was being accessed with linear"},{"type":"text","text":" "},{"type":"text","text":"filtering. This is not supported by CUDA."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidfiltersetting","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidFilterSetting"}],"type":"topic","title":"cudaError.cudaErrorInvalidFilterSetting","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidTextureBinding":{"abstract":[{"type":"text","text":"This indicates that the texture binding is not valid. This occurs if you"},{"type":"text","text":" "},{"type":"text","text":"call ::cudaGetTextureAlignmentOffset() with an unbound texture."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTextureBinding","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidTextureBinding"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidtexturebinding","title":"cudaError.cudaErrorInvalidTextureBinding"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLossyQuery":{"title":"cudaError.cudaErrorLossyQuery","abstract":[{"text":"This indicates an attempt was made to introspect an object in a way that","type":"text"},{"text":" ","type":"text"},{"text":"would discard semantically important information. This is either due to","type":"text"},{"text":" ","type":"text"},{"text":"the object using funtionality newer than the API version used to","type":"text"},{"text":" ","type":"text"},{"text":"introspect it or omission of optional return arguments.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorLossyQuery"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLossyQuery","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlossyquery"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInitializationError":{"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInitializationError","kind":"symbol","title":"cudaError.cudaErrorInitializationError","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinitializationerror","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInitializationError","kind":"identifier"}],"abstract":[{"text":"The API call failed because the CUDA driver and runtime could not be","type":"text"},{"text":" ","type":"text"},{"text":"initialized.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMissingConfiguration":{"title":"cudaError.cudaErrorMissingConfiguration","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormissingconfiguration","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMissingConfiguration"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMissingConfiguration","role":"symbol","abstract":[{"text":"The device function being invoked (usually via ::cudaLaunchKernel()) was not","type":"text"},{"text":" ","type":"text"},{"text":"previously configured via the ::cudaConfigureCall() function.","type":"text"}],"kind":"symbol","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAddressOfConstant":{"title":"cudaError.cudaErrorAddressOfConstant","abstract":[{"text":"This indicated that the user has taken the address of a constant variable,","type":"text"},{"text":" ","type":"text"},{"text":"which was forbidden up until the CUDA 3.1 release.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Variables in constant","type":"text"},{"text":" ","type":"text"},{"text":"memory may now have their address taken by the runtime via","type":"text"},{"text":" ","type":"text"},{"text":"::cudaGetSymbolAddress().","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorAddressOfConstant"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAddressOfConstant","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerroraddressofconstant"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureImplicit":{"title":"cudaError.cudaErrorStreamCaptureImplicit","abstract":[{"text":"The operation would have resulted in a disallowed implicit dependency on","type":"text"},{"text":" ","type":"text"},{"text":"a current capture sequence from cudaStreamLegacy.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureImplicit"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureImplicit","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureimplicit"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDuplicateTextureName":{"title":"cudaError.cudaErrorDuplicateTextureName","abstract":[{"text":"This indicates that multiple textures (across separate CUDA source","type":"text"},{"text":" ","type":"text"},{"text":"files in the application) share the same string name.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDuplicateTextureName"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateTextureName","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorduplicatetexturename"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerAlreadyStopped":{"title":"cudaError.cudaErrorProfilerAlreadyStopped","abstract":[{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 5.0. It is no longer an error","type":"text"},{"text":" ","type":"text"},{"text":"to call cudaProfilerStop() when profiling is already disabled.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorProfilerAlreadyStopped"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStopped","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofileralreadystopped"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorHostMemoryAlreadyRegistered":{"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorhostmemoryalreadyregistered","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorHostMemoryAlreadyRegistered","kind":"identifier"}],"kind":"symbol","title":"cudaError.cudaErrorHostMemoryAlreadyRegistered","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryAlreadyRegistered","abstract":[{"text":"This error indicates that the memory range passed to ::cudaHostRegister()","type":"text"},{"text":" ","type":"text"},{"text":"has already been registered.","type":"text"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidDevice":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevice","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidDevice","kind":"identifier"}],"abstract":[{"text":"This indicates that the device ordinal supplied by the user does not","type":"text"},{"text":" ","type":"text"},{"text":"correspond to a valid CUDA device or that the action requested is","type":"text"},{"text":" ","type":"text"},{"text":"invalid for the specified device.","type":"text"}],"title":"cudaError.cudaErrorInvalidDevice","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvaliddevice","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsMaxClientsReached":{"title":"cudaError.cudaErrorMpsMaxClientsReached","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsmaxclientsreached","abstract":[{"type":"text","text":"This error indicates that the hardware resources required to create MPS client have been exhausted."}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxClientsReached","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsMaxClientsReached"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidConfiguration":{"title":"cudaError.cudaErrorInvalidConfiguration","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidconfiguration","abstract":[{"type":"text","text":"This indicates that a kernel launch is requesting resources that can"},{"type":"text","text":" "},{"type":"text","text":"never be satisfied by the current device. Requesting more shared memory"},{"type":"text","text":" "},{"type":"text","text":"per block than the device supports will trigger this error, as will"},{"type":"text","text":" "},{"type":"text","text":"requesting too many threads or blocks. See ::cudaDeviceProp for more"},{"type":"text","text":" "},{"type":"text","text":"device limitations."}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidConfiguration","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidConfiguration"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorECCUncorrectable":{"title":"cudaError.cudaErrorECCUncorrectable","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerroreccuncorrectable","abstract":[{"type":"text","text":"This indicates that an uncorrectable ECC error was detected during"},{"type":"text","text":" "},{"type":"text","text":"execution."}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorECCUncorrectable","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorECCUncorrectable"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAlreadyMapped":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyMapped","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorAlreadyMapped"}],"title":"cudaError.cudaErrorAlreadyMapped","abstract":[{"text":"This indicates that the resource is already mapped.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerroralreadymapped"},"doc://SwiftCU/s8CopyableP":{"identifier":"doc:\/\/SwiftCU\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTimeout":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTimeout","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorTimeout"}],"title":"cudaError.cudaErrorTimeout","abstract":[{"text":"This indicates that the wait operation has timed out.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortimeout"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPriorLaunchFailure":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPriorLaunchFailure","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorPriorLaunchFailure"}],"title":"cudaError.cudaErrorPriorLaunchFailure","abstract":[{"text":"This indicated that a previous kernel launch failed. This was previously","type":"text"},{"text":" ","type":"text"},{"text":"used for device emulation of kernel launches.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpriorlaunchfailure"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIllegalInstruction":{"title":"cudaError.cudaErrorIllegalInstruction","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorillegalinstruction","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorIllegalInstruction"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalInstruction","role":"symbol","abstract":[{"text":"The device encountered an illegal instruction during kernel execution","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"kind":"symbol","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchMaxDepthExceeded":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchMaxDepthExceeded","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"cudaError.cudaErrorLaunchMaxDepthExceeded","abstract":[{"type":"text","text":"This error indicates that a device runtime grid launch did not occur"},{"type":"text","text":" "},{"type":"text","text":"because the depth of the child grid would exceed the maximum supported"},{"type":"text","text":" "},{"type":"text","text":"number of nested grid launches."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchmaxdepthexceeded","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchMaxDepthExceeded"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsRpcFailure":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMpsRpcFailure","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"cudaError.cudaErrorMpsRpcFailure","abstract":[{"type":"text","text":"This error indicates that the remote procedural call between the MPS server and the MPS client failed."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsrpcfailure","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsRpcFailure"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPeerAccessNotEnabled":{"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessNotEnabled","title":"cudaError.cudaErrorPeerAccessNotEnabled","role":"symbol","abstract":[{"type":"text","text":"This error indicates that ::cudaDeviceDisablePeerAccess() is trying to"},{"type":"text","text":" "},{"type":"text","text":"disable peer addressing which has not been enabled yet via"},{"type":"text","text":" "},{"type":"text","text":"::cudaDeviceEnablePeerAccess()."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorPeerAccessNotEnabled","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpeeraccessnotenabled","type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidTexture":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidTexture","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidtexture","abstract":[{"text":"This indicates that the texture passed to the API call is not a valid","type":"text"},{"text":" ","type":"text"},{"text":"texture.","type":"text"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTexture","role":"symbol","title":"cudaError.cudaErrorInvalidTexture"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorArrayIsMapped":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorArrayIsMapped","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorArrayIsMapped"}],"title":"cudaError.cudaErrorArrayIsMapped","abstract":[{"text":"This indicates that the specified array is currently mapped and thus","type":"text"},{"text":" ","type":"text"},{"text":"cannot be destroyed.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorarrayismapped"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNvlinkUncorrectable":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNvlinkUncorrectable","title":"cudaError.cudaErrorNvlinkUncorrectable","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornvlinkuncorrectable","abstract":[{"text":"This indicates that an uncorrectable NVLink error was detected during the","type":"text"},{"text":" ","type":"text"},{"text":"execution.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNvlinkUncorrectable","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStubLibrary":{"type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstublibrary","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStubLibrary"}],"kind":"symbol","title":"cudaError.cudaErrorStubLibrary","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStubLibrary","abstract":[{"text":"This indicates that the CUDA driver that the application has loaded is a","type":"text"},{"text":" ","type":"text"},{"text":"stub library. Applications that run with the stub rather than a real","type":"text"},{"text":" ","type":"text"},{"text":"driver loaded will result in CUDA API returning this error.","type":"text"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTooManyPeers":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortoomanypeers","kind":"symbol","title":"cudaError.cudaErrorTooManyPeers","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTooManyPeers","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorTooManyPeers"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"This error indicates that the hardware resources required to enable"},{"type":"text","text":" "},{"type":"text","text":"peer access have been exhausted for one or more of the devices"},{"type":"text","text":" "},{"type":"text","text":"passed to ::cudaEnablePeerAccess()."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStartupFailure":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStartupFailure"}],"type":"topic","abstract":[{"type":"text","text":"This indicates an internal startup failure in the CUDA runtime."}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStartupFailure","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstartupfailure","title":"cudaError.cudaErrorStartupFailure","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMixedDeviceExecution":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMixedDeviceExecution","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormixeddeviceexecution","abstract":[{"text":"Mixing of device and device emulation code was not allowed.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"role":"symbol","title":"cudaError.cudaErrorMixedDeviceExecution","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMixedDeviceExecution","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSharedObjectInitFailed":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorSharedObjectInitFailed","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsharedobjectinitfailed","abstract":[{"text":"This indicates that initialization of a shared object failed.","type":"text"}],"role":"symbol","title":"cudaError.cudaErrorSharedObjectInitFailed","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectInitFailed","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidHostPointer":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidHostPointer","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidhostpointer","abstract":[{"text":"This indicates that at least one host pointer passed to the API call is","type":"text"},{"text":" ","type":"text"},{"text":"not a valid host pointer.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 10.1.","type":"text"}],"role":"symbol","title":"cudaError.cudaErrorInvalidHostPointer","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidHostPointer","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedPtxVersion":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorUnsupportedPtxVersion","kind":"identifier"}],"type":"topic","abstract":[{"text":"This indicates that the provided PTX was compiled with an unsupported toolchain.","type":"text"},{"text":" ","type":"text"},{"text":"The most common reason for this, is the PTX was generated by a compiler newer","type":"text"},{"text":" ","type":"text"},{"text":"than what is supported by the CUDA driver and PTX JIT compiler.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedPtxVersion","title":"cudaError.cudaErrorUnsupportedPtxVersion","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupportedptxversion","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMemoryValueTooLarge":{"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryValueTooLarge","kind":"symbol","title":"cudaError.cudaErrorMemoryValueTooLarge","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormemoryvaluetoolarge","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"cudaErrorMemoryValueTooLarge","kind":"identifier"}],"abstract":[{"type":"text","text":"This indicated that an emulated device pointer exceeded the 32-bit address"},{"type":"text","text":" "},{"type":"text","text":"range."},{"type":"text","text":" "},{"type":"text","text":"\\deprecated"},{"type":"text","text":" "},{"type":"text","text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was"},{"type":"text","text":" "},{"type":"text","text":"removed with the CUDA 3.1 release."}],"type":"topic"}}}