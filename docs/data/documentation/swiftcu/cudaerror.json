{"kind":"symbol","relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/SwiftCU\/s8CopyableP","doc:\/\/SwiftCU\/SQ","doc:\/\/SwiftCU\/SH","doc:\/\/SwiftCU\/SY"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaError"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/SwiftCU\/documentation\/SwiftCU"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"cudaError"}],"title":"cudaError","symbolKind":"enum","role":"symbol","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaError"}],"modules":[{"name":"SwiftCU"}],"externalID":"s:7SwiftCU9cudaErrorO"},"topicSections":[{"generated":true,"title":"Enumeration Cases","identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAddressOfConstant","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyAcquired","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyMapped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorApiFailureBase","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorArrayIsMapped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAssert","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCallRequiresNewerDriver","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCapturedEvent","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpNotSupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpVersionMismatch","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCompatNotSupportedOnDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorContextIsDestroyed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCooperativeLaunchTooLarge","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCudartUnloading","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceAlreadyInUse","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceNotLicensed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceUninitialized","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDevicesUnavailable","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateSurfaceName","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateTextureName","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateVariableName","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorECCUncorrectable","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorExternalDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorFileNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorGraphExecUpdateFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHardwareStackError","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryAlreadyRegistered","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryNotRegistered","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalAddress","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalInstruction","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalState","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIncompatibleDriverContext","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInitializationError","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInsufficientDriver","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidAddressSpace","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidChannelDescriptor","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidClusterSize","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidConfiguration","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDeviceFunction","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevicePointer","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidFilterSetting","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidGraphicsContext","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidHostPointer","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidKernelImage","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidMemcpyDirection","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidNormSetting","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPc","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPitchValue","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPtx","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidResourceHandle","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSource","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSurface","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSymbol","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTexture","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTextureBinding","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidValue","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilationDisabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilerNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedSurf","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedTex","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchIncompatibleTexturing","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchMaxDepthExceeded","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchOutOfResources","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchPendingCountExceeded","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchTimeout","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLossyQuery","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMapBufferObjectFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryAllocation","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryValueTooLarge","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMisalignedAddress","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMissingConfiguration","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMixedDeviceExecution","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsClientTerminated","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsConnectionFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxClientsReached","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxConnectionsReached","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsRpcFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsServerNotReady","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoKernelImageForDevice","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMapped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsArray","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsPointer","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotPermitted","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotReady","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotSupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotYetImplemented","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNvlinkUncorrectable","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorOperatingSystem","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessAlreadyEnabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessNotEnabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessUnsupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPriorLaunchFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStarted","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStopped","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerDisabled","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerNotInitialized","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSetOnActiveProcess","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectInitFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectSymbolNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSoftwareValidityNotEstablished","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStartupFailure","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureImplicit","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureInvalidated","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureIsolation","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureMerge","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnjoined","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnmatched","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnsupported","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureWrongThread","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStubLibrary","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSymbolNotFound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSyncDepthExceeded","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSynchronizationError","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemDriverMismatch","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemNotReady","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureFetchFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureNotBound","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTimeout","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTooManyPeers","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnknown","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnmapBufferObjectFailed","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedDevSideSync","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedExecAffinity","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedLimit","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedPtxVersion","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaSuccess"],"anchor":"Enumeration-Cases"},{"generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/init(rawValue:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/isSuccessful"],"anchor":"Instance-Properties"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/safetyCheckCondition(message:)"],"anchor":"Instance-Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/Equatable-Implementations","doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/RawRepresentable-Implementations"],"anchor":"Default-Implementations"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcu\/cudaerror"]}],"references":{"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCudartUnloading":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcudartunloading","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCudartUnloading","title":"cudaError.cudaErrorCudartUnloading","kind":"symbol","role":"symbol","abstract":[{"text":"This indicates that a CUDA Runtime API call cannot be executed because","type":"text"},{"text":" ","type":"text"},{"text":"it is being called during process shut down, at a point in time after","type":"text"},{"text":" ","type":"text"},{"text":"CUDA driver has been unloaded.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorCudartUnloading","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsServerNotReady":{"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMpsServerNotReady","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsservernotready","title":"cudaError.cudaErrorMpsServerNotReady","abstract":[{"text":"This error indicates that the MPS server is not ready to accept new MPS client requests.","type":"text"},{"text":" ","type":"text"},{"text":"This error can be returned when the MPS server is in the process of recovering from a fatal failure.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsServerNotReady"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorOperatingSystem":{"title":"cudaError.cudaErrorOperatingSystem","type":"topic","abstract":[{"type":"text","text":"This error indicates that an OS call failed."}],"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorOperatingSystem","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerroroperatingsystem","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorOperatingSystem"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidPc":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidpc","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPc","title":"cudaError.cudaErrorInvalidPc","abstract":[{"type":"text","text":"The device encountered an invalid program counter."},{"type":"text","text":" "},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"text":" ","type":"text"},{"type":"text","text":"and relaunched."}],"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidPc","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSyncDepthExceeded":{"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorSyncDepthExceeded","kind":"identifier"}],"title":"cudaError.cudaErrorSyncDepthExceeded","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsyncdepthexceeded","abstract":[{"text":"This error indicates that a call to ::cudaDeviceSynchronize made from","type":"text"},{"type":"text","text":" "},{"text":"the device runtime failed because the call was made at grid depth greater","type":"text"},{"text":" ","type":"text"},{"text":"than than either the default (2 levels of grids) or user specified device","type":"text"},{"text":" ","type":"text"},{"text":"limit ::cudaLimitDevRuntimeSyncDepth. To be able to synchronize on","type":"text"},{"text":" ","type":"text"},{"text":"launched grids at a greater depth successfully, the maximum nested","type":"text"},{"text":" ","type":"text"},{"text":"depth at which ::cudaDeviceSynchronize will be called must be specified","type":"text"},{"text":" ","type":"text"},{"text":"with the ::cudaLimitDevRuntimeSyncDepth limit to the ::cudaDeviceSetLimit","type":"text"},{"text":" ","type":"text"},{"text":"api before the host-side launch of a kernel using the device runtime.","type":"text"},{"text":" ","type":"text"},{"text":"Keep in mind that additional levels of sync depth require the runtime","type":"text"},{"text":" ","type":"text"},{"text":"to reserve large amounts of device memory that cannot be used for","type":"text"},{"text":" ","type":"text"},{"text":"user allocations. Note that ::cudaDeviceSynchronize made from device","type":"text"},{"text":" ","type":"text"},{"text":"runtime is only supported on devices of compute capability < 9.0.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSyncDepthExceeded"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotReady":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNotReady"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotready","abstract":[{"text":"This indicates that asynchronous operations issued previously have not","type":"text"},{"text":" ","type":"text"},{"text":"completed yet. This result is not actually an error, but must be indicated","type":"text"},{"text":" ","type":"text"},{"text":"differently than ::cudaSuccess (which indicates completion). Calls that","type":"text"},{"text":" ","type":"text"},{"text":"may return this value include ::cudaEventQuery() and ::cudaStreamQuery().","type":"text"}],"title":"cudaError.cudaErrorNotReady","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotReady"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTooManyPeers":{"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorTooManyPeers","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortoomanypeers","title":"cudaError.cudaErrorTooManyPeers","abstract":[{"type":"text","text":"This error indicates that the hardware resources required to enable"},{"type":"text","text":" "},{"type":"text","text":"peer access have been exhausted for one or more of the devices"},{"type":"text","text":" "},{"type":"text","text":"passed to ::cudaEnablePeerAccess()."}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTooManyPeers"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorJitCompilerNotFound":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilerNotFound","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorJitCompilerNotFound","kind":"identifier"}],"title":"cudaError.cudaErrorJitCompilerNotFound","abstract":[{"text":"This indicates that the PTX JIT compiler library was not found. The JIT Compiler","type":"text"},{"text":" ","type":"text"},{"text":"library is used for PTX compilation. The runtime may fall back to compiling PTX","type":"text"},{"text":" ","type":"text"},{"text":"if an application does not contain a suitable binary for the current device.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorjitcompilernotfound","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidMemcpyDirection":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidmemcpydirection","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidMemcpyDirection","title":"cudaError.cudaErrorInvalidMemcpyDirection","abstract":[{"text":"This indicates that the direction of the memcpy passed to the API call is","type":"text"},{"text":" ","type":"text"},{"text":"not one of the types specified by ::cudaMemcpyKind.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidMemcpyDirection"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidTexture":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidTexture"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidtexture","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTexture","title":"cudaError.cudaErrorInvalidTexture","abstract":[{"type":"text","text":"This indicates that the texture passed to the API call is not a valid"},{"type":"text","text":" "},{"type":"text","text":"texture."}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/RawRepresentable-Implementations":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/RawRepresentable-Implementations","title":"RawRepresentable Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/swiftcu\/cudaerror\/rawrepresentable-implementations","kind":"article"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNvlinkUncorrectable":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNvlinkUncorrectable","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNvlinkUncorrectable","kind":"identifier"}],"title":"cudaError.cudaErrorNvlinkUncorrectable","abstract":[{"text":"This indicates that an uncorrectable NVLink error was detected during the","type":"text"},{"text":" ","type":"text"},{"text":"execution.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornvlinkuncorrectable","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMisalignedAddress":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormisalignedaddress","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMisalignedAddress","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMisalignedAddress","abstract":[{"text":"The device encountered a load or store instruction","type":"text"},{"text":" ","type":"text"},{"text":"on a memory address which is not aligned.","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"title":"cudaError.cudaErrorMisalignedAddress","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotYetImplemented":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotyetimplemented","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotYetImplemented","title":"cudaError.cudaErrorNotYetImplemented","abstract":[{"text":"This indicates that the API call is not yet implemented. Production","type":"text"},{"text":" ","type":"text"},{"text":"releases of CUDA will never return this error.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 4.1.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNotYetImplemented"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidResourceHandle":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidResourceHandle","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidResourceHandle"}],"kind":"symbol","abstract":[{"type":"text","text":"This indicates that a resource handle passed to the API call was not"},{"type":"text","text":" "},{"type":"text","text":"valid. Resource handles are opaque types like ::cudaStream_t and"},{"type":"text","text":" "},{"type":"text","text":"::cudaEvent_t."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidresourcehandle","title":"cudaError.cudaErrorInvalidResourceHandle","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorHostMemoryAlreadyRegistered":{"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorHostMemoryAlreadyRegistered","kind":"identifier"}],"title":"cudaError.cudaErrorHostMemoryAlreadyRegistered","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorhostmemoryalreadyregistered","abstract":[{"type":"text","text":"This error indicates that the memory range passed to ::cudaHostRegister()"},{"type":"text","text":" "},{"type":"text","text":"has already been registered."}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryAlreadyRegistered"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidValue":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidValue","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidValue","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"This indicates that one or more of the parameters passed to the API call","type":"text"},{"text":" ","type":"text"},{"text":"is not within an acceptable range of values.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidvalue","title":"cudaError.cudaErrorInvalidValue"},"doc://SwiftCU/documentation/SwiftCU/cudaError/isSuccessful":{"url":"\/documentation\/swiftcu\/cudaerror\/issuccessful","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/isSuccessful","title":"isSuccessful","kind":"symbol","role":"symbol","abstract":[{"text":"Checks if the error represents a successful CUDA operation.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isSuccessful"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchPendingCountExceeded":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorLaunchPendingCountExceeded"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchpendingcountexceeded","title":"cudaError.cudaErrorLaunchPendingCountExceeded","abstract":[{"type":"text","text":"This error indicates that a device runtime grid launch failed because"},{"type":"text","text":" "},{"type":"text","text":"the launch would exceed the limit ::cudaLimitDevRuntimePendingLaunchCount."},{"type":"text","text":" "},{"type":"text","text":"For this launch to proceed successfully, ::cudaDeviceSetLimit must be"},{"type":"text","text":" "},{"type":"text","text":"called to set the ::cudaLimitDevRuntimePendingLaunchCount to be higher"},{"type":"text","text":" "},{"type":"text","text":"than the upper bound of outstanding launches that can be issued to the"},{"type":"text","text":" "},{"type":"text","text":"device runtime. Keep in mind that raising the limit of pending device"},{"type":"text","text":" "},{"type":"text","text":"runtime launches will require the runtime to reserve device memory that"},{"type":"text","text":" "},{"type":"text","text":"cannot be used for user allocations."}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchPendingCountExceeded"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSoftwareValidityNotEstablished":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorSoftwareValidityNotEstablished","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSoftwareValidityNotEstablished","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"By default, the CUDA runtime may perform a minimal set of self-tests,","type":"text"},{"text":" ","type":"text"},{"text":"as well as CUDA driver tests, to establish the validity of both.","type":"text"},{"text":" ","type":"text"},{"text":"Introduced in CUDA 11.2, this error return indicates that at least one","type":"text"},{"text":" ","type":"text"},{"text":"of these tests has failed and the validity of either the runtime","type":"text"},{"text":" ","type":"text"},{"text":"or the driver could not be established.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsoftwarevaliditynotestablished","title":"cudaError.cudaErrorSoftwareValidityNotEstablished"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchTimeout":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchtimeout","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorLaunchTimeout"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchTimeout","abstract":[{"type":"text","text":"This indicates that the device kernel took too long to execute. This can"},{"type":"text","text":" "},{"type":"text","text":"only occur if timeouts are enabled - see the device property"},{"type":"text","text":" "},{"type":"text","text":"\\ref ::cudaDeviceProp::kernelExecTimeoutEnabled “kernelExecTimeoutEnabled”"},{"type":"text","text":" "},{"type":"text","text":"for more information."},{"type":"text","text":" "},{"type":"text","text":"This leaves the process in an inconsistent state and any further CUDA work"},{"type":"text","text":" "},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"type":"text","text":" "},{"type":"text","text":"and relaunched."}],"title":"cudaError.cudaErrorLaunchTimeout","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIllegalAddress":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalAddress","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorIllegalAddress"}],"title":"cudaError.cudaErrorIllegalAddress","abstract":[{"type":"text","text":"The device encountered a load or store instruction on an invalid memory address."},{"type":"text","text":" "},{"type":"text","text":"This leaves the process in an inconsistent state and any further CUDA work"},{"type":"text","text":" "},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"type":"text","text":" "},{"type":"text","text":"and relaunched."}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorillegaladdress","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNoKernelImageForDevice":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNoKernelImageForDevice"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoKernelImageForDevice","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"This indicates that there is no kernel image available that is suitable","type":"text"},{"text":" ","type":"text"},{"text":"for the device. This can occur when a user specifies code generation","type":"text"},{"text":" ","type":"text"},{"text":"options for a particular CUDA source file that do not include the","type":"text"},{"text":" ","type":"text"},{"text":"corresponding device configuration.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornokernelimagefordevice","title":"cudaError.cudaErrorNoKernelImageForDevice"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidPtx":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPtx","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidPtx"}],"kind":"symbol","abstract":[{"text":"A PTX compilation failed. The runtime may fall back to compiling PTX if","type":"text"},{"text":" ","type":"text"},{"text":"an application does not contain a suitable binary for the current device.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidptx","title":"cudaError.cudaErrorInvalidPtx","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsMaxConnectionsReached":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsmaxconnectionsreached","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsMaxConnectionsReached"}],"title":"cudaError.cudaErrorMpsMaxConnectionsReached","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxConnectionsReached","abstract":[{"text":"This error indicates the the hardware resources required to device connections have been exhausted.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAddressOfConstant":{"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorAddressOfConstant","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerroraddressofconstant","title":"cudaError.cudaErrorAddressOfConstant","abstract":[{"type":"text","text":"This indicated that the user has taken the address of a constant variable,"},{"type":"text","text":" "},{"type":"text","text":"which was forbidden up until the CUDA 3.1 release."},{"type":"text","text":" "},{"type":"text","text":"\\deprecated"},{"type":"text","text":" "},{"type":"text","text":"This error return is deprecated as of CUDA 3.1. Variables in constant"},{"type":"text","text":" "},{"type":"text","text":"memory may now have their address taken by the runtime via"},{"type":"text","text":" "},{"type":"text","text":"::cudaGetSymbolAddress()."}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAddressOfConstant"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorExternalDevice":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorExternalDevice"}],"title":"cudaError.cudaErrorExternalDevice","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorexternaldevice","abstract":[{"text":"This indicates that an async error has occurred in a device outside of CUDA.","type":"text"},{"text":" ","type":"text"},{"text":"If CUDA was waiting for an external device’s signal before consuming shared data,","type":"text"},{"text":" ","type":"text"},{"text":"the external device signaled an error indicating that the data is not valid for","type":"text"},{"text":" ","type":"text"},{"text":"consumption. This leaves the process in an inconsistent state and any further CUDA","type":"text"},{"text":" ","type":"text"},{"text":"work will return the same error. To continue using CUDA, the process must be","type":"text"},{"text":" ","type":"text"},{"text":"terminated and relaunched.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorExternalDevice"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorGraphExecUpdateFailure":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorGraphExecUpdateFailure"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorGraphExecUpdateFailure","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"This error indicates that the graph update was not performed because it included","type":"text"},{"text":" ","type":"text"},{"text":"changes which violated constraints specific to instantiated graph update.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorgraphexecupdatefailure","title":"cudaError.cudaErrorGraphExecUpdateFailure"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMemoryAllocation":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMemoryAllocation","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormemoryallocation","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryAllocation","title":"cudaError.cudaErrorMemoryAllocation","abstract":[{"text":"The API call failed because it was unable to allocate enough memory or","type":"text"},{"text":" ","type":"text"},{"text":"other resources to perform the requested operation.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMissingConfiguration":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormissingconfiguration","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMissingConfiguration"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMissingConfiguration","abstract":[{"type":"text","text":"The device function being invoked (usually via ::cudaLaunchKernel()) was not"},{"type":"text","text":" "},{"type":"text","text":"previously configured via the ::cudaConfigureCall() function."}],"title":"cudaError.cudaErrorMissingConfiguration","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDuplicateVariableName":{"title":"cudaError.cudaErrorDuplicateVariableName","type":"topic","abstract":[{"text":"This indicates that multiple global or constant variables (across separate","type":"text"},{"text":" ","type":"text"},{"text":"CUDA source files in the application) share the same string name.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDuplicateVariableName"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorduplicatevariablename","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateVariableName"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDuplicateSurfaceName":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateSurfaceName","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorDuplicateSurfaceName","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that multiple surfaces (across separate CUDA source","type":"text"},{"text":" ","type":"text"},{"text":"files in the application) share the same string name.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorduplicatesurfacename","title":"cudaError.cudaErrorDuplicateSurfaceName","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureUnjoined":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureunjoined","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureUnjoined"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnjoined","abstract":[{"text":"The capture sequence contains a fork that was not joined to the primary","type":"text"},{"text":" ","type":"text"},{"text":"stream.","type":"text"}],"title":"cudaError.cudaErrorStreamCaptureUnjoined","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotPermitted":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNotPermitted"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotpermitted","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotPermitted","title":"cudaError.cudaErrorNotPermitted","abstract":[{"type":"text","text":"This error indicates the attempted operation is not permitted."}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidChannelDescriptor":{"title":"cudaError.cudaErrorInvalidChannelDescriptor","type":"topic","abstract":[{"text":"This indicates that the channel descriptor passed to the API call is not","type":"text"},{"text":" ","type":"text"},{"text":"valid. This occurs if the format is not one of the formats specified by","type":"text"},{"text":" ","type":"text"},{"text":"::cudaChannelFormatKind, or if one of the dimensions is invalid.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidChannelDescriptor","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidchanneldescriptor","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidChannelDescriptor"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorArrayIsMapped":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorArrayIsMapped"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorarrayismapped","abstract":[{"type":"text","text":"This indicates that the specified array is currently mapped and thus"},{"type":"text","text":" "},{"type":"text","text":"cannot be destroyed."}],"title":"cudaError.cudaErrorArrayIsMapped","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorArrayIsMapped"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotMappedAsArray":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNotMappedAsArray"}],"title":"cudaError.cudaErrorNotMappedAsArray","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotmappedasarray","abstract":[{"text":"This indicates that a mapped resource is not available for access as an","type":"text"},{"text":" ","type":"text"},{"text":"array.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsArray"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIllegalState":{"kind":"symbol","abstract":[{"text":"This indicates that a resource required by the API call is not in a","type":"text"},{"text":" ","type":"text"},{"text":"valid state to perform the requested operation.","type":"text"}],"type":"topic","title":"cudaError.cudaErrorIllegalState","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorillegalstate","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorIllegalState","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalState"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorJitCompilationDisabled":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorjitcompilationdisabled","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorJitCompilationDisabled","title":"cudaError.cudaErrorJitCompilationDisabled","abstract":[{"text":"This indicates that the JIT compilation was disabled. The JIT compilation compiles","type":"text"},{"text":" ","type":"text"},{"text":"PTX. The runtime may fall back to compiling PTX if an application does not contain","type":"text"},{"text":" ","type":"text"},{"text":"a suitable binary for the current device.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorJitCompilationDisabled","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsConnectionFailed":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsConnectionFailed"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsconnectionfailed","abstract":[{"type":"text","text":"This error indicates that the MPS client failed to connect to the MPS control daemon or the MPS server."}],"title":"cudaError.cudaErrorMpsConnectionFailed","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsConnectionFailed"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMemoryValueTooLarge":{"title":"cudaError.cudaErrorMemoryValueTooLarge","type":"topic","abstract":[{"type":"text","text":"This indicated that an emulated device pointer exceeded the 32-bit address"},{"type":"text","text":" "},{"type":"text","text":"range."},{"type":"text","text":" "},{"type":"text","text":"\\deprecated"},{"type":"text","text":" "},{"type":"text","text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was"},{"type":"text","text":" "},{"type":"text","text":"removed with the CUDA 3.1 release."}],"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMemoryValueTooLarge","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormemoryvaluetoolarge","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMemoryValueTooLarge"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchFileScopedTex":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedTex","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchFileScopedTex","kind":"identifier"}],"title":"cudaError.cudaErrorLaunchFileScopedTex","abstract":[{"type":"text","text":"This error indicates that a grid launch did not occur because the kernel"},{"type":"text","text":" "},{"type":"text","text":"uses file-scoped textures which are unsupported by the device runtime."},{"type":"text","text":" "},{"type":"text","text":"Kernels launched via the device runtime only support textures created with"},{"type":"text","text":" "},{"type":"text","text":"the Texture Object API’s."}],"type":"topic","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchfilescopedtex","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLossyQuery":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorLossyQuery"}],"title":"cudaError.cudaErrorLossyQuery","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlossyquery","abstract":[{"text":"This indicates an attempt was made to introspect an object in a way that","type":"text"},{"text":" ","type":"text"},{"text":"would discard semantically important information. This is either due to","type":"text"},{"text":" ","type":"text"},{"text":"the object using funtionality newer than the API version used to","type":"text"},{"text":" ","type":"text"},{"text":"introspect it or omission of optional return arguments.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLossyQuery"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorECCUncorrectable":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerroreccuncorrectable","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorECCUncorrectable"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorECCUncorrectable","abstract":[{"type":"text","text":"This indicates that an uncorrectable ECC error was detected during"},{"type":"text","text":" "},{"type":"text","text":"execution."}],"title":"cudaError.cudaErrorECCUncorrectable","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNoDevice":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNoDevice","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNoDevice","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that no CUDA-capable devices were detected by the installed","type":"text"},{"text":" ","type":"text"},{"text":"CUDA driver.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornodevice","title":"cudaError.cudaErrorNoDevice","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAssert":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorassert","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorAssert","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAssert","abstract":[{"text":"An assert triggered in device code during kernel execution. The device","type":"text"},{"text":" ","type":"text"},{"text":"cannot be used again. All existing allocations are invalid. To continue","type":"text"},{"text":" ","type":"text"},{"text":"using CUDA, the process must be terminated and relaunched.","type":"text"}],"title":"cudaError.cudaErrorAssert","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidSymbol":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidsymbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSymbol","title":"cudaError.cudaErrorInvalidSymbol","kind":"symbol","role":"symbol","abstract":[{"text":"This indicates that the symbol name\/identifier passed to the API call","type":"text"},{"text":" ","type":"text"},{"text":"is not a valid name or identifier.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidSymbol","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerAlreadyStarted":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofileralreadystarted","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStarted","title":"cudaError.cudaErrorProfilerAlreadyStarted","abstract":[{"type":"text","text":"\\deprecated"},{"type":"text","text":" "},{"type":"text","text":"This error return is deprecated as of CUDA 5.0. It is no longer an error"},{"type":"text","text":" "},{"type":"text","text":"to call cudaProfilerStart() when profiling is already enabled."}],"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorProfilerAlreadyStarted","kind":"identifier"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStubLibrary":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStubLibrary","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorStubLibrary","kind":"identifier"}],"title":"cudaError.cudaErrorStubLibrary","abstract":[{"text":"This indicates that the CUDA driver that the application has loaded is a","type":"text"},{"text":" ","type":"text"},{"text":"stub library. Applications that run with the stub rather than a real","type":"text"},{"text":" ","type":"text"},{"text":"driver loaded will result in CUDA API returning this error.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstublibrary","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU","title":"SwiftCU","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/swiftcu","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTimeout":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortimeout","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorTimeout"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTimeout","abstract":[{"text":"This indicates that the wait operation has timed out.","type":"text"}],"title":"cudaError.cudaErrorTimeout","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorHardwareStackError":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorHardwareStackError"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorhardwarestackerror","title":"cudaError.cudaErrorHardwareStackError","abstract":[{"text":"Device encountered an error in the call stack during kernel execution,","type":"text"},{"text":" ","type":"text"},{"text":"possibly due to stack corruption or exceeding the stack size limit.","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHardwareStackError"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidKernelImage":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidkernelimage","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidKernelImage"}],"title":"cudaError.cudaErrorInvalidKernelImage","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidKernelImage","abstract":[{"type":"text","text":"This indicates that the device kernel image is invalid."}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMixedDeviceExecution":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMixedDeviceExecution","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormixeddeviceexecution","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMixedDeviceExecution","title":"cudaError.cudaErrorMixedDeviceExecution","abstract":[{"text":"Mixing of device and device emulation code was not allowed.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchFailure":{"kind":"symbol","abstract":[{"type":"text","text":"An exception occurred on the device while executing a kernel. Common"},{"type":"text","text":" "},{"type":"text","text":"causes include dereferencing an invalid device pointer and accessing"},{"type":"text","text":" "},{"type":"text","text":"out of bounds shared memory. Less common cases can be system specific - more"},{"type":"text","text":" "},{"type":"text","text":"information about these cases can be found in the system specific user guide."},{"type":"text","text":" "},{"type":"text","text":"This leaves the process in an inconsistent state and any further CUDA work"},{"type":"text","text":" "},{"type":"text","text":"will return the same error. To continue using CUDA, the process must be terminated"},{"type":"text","text":" "},{"type":"text","text":"and relaunched."}],"type":"topic","title":"cudaError.cudaErrorLaunchFailure","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchfailure","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchFailure","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFailure"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidDevicePointer":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevicePointer","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidDevicePointer"}],"title":"cudaError.cudaErrorInvalidDevicePointer","abstract":[{"text":"This indicates that at least one device pointer passed to the API call is","type":"text"},{"text":" ","type":"text"},{"text":"not a valid device pointer.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 10.1.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvaliddevicepointer","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDeviceUninitialized":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceUninitialized","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDeviceUninitialized"}],"title":"cudaError.cudaErrorDeviceUninitialized","abstract":[{"text":"This most frequently indicates that there is no context bound to the","type":"text"},{"text":" ","type":"text"},{"text":"current thread. This can also be returned if the context passed to an","type":"text"},{"text":" ","type":"text"},{"text":"API call is not a valid handle (such as a context that has had","type":"text"},{"text":" ","type":"text"},{"text":"::cuCtxDestroy() invoked on it). This can also be returned if a user","type":"text"},{"text":" ","type":"text"},{"text":"mixes different API versions (i.e. 3010 context with 3020 API calls).","type":"text"},{"text":" ","type":"text"},{"text":"See ::cuCtxGetApiVersion() for more details.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordeviceuninitialized","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidNormSetting":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidNormSetting"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidnormsetting","title":"cudaError.cudaErrorInvalidNormSetting","abstract":[{"type":"text","text":"This indicates that an attempt was made to read a non-float texture as a"},{"type":"text","text":" "},{"type":"text","text":"normalized float. This is not supported by CUDA."}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidNormSetting"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsMaxClientsReached":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsmaxclientsreached","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsMaxClientsReached"}],"title":"cudaError.cudaErrorMpsMaxClientsReached","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsMaxClientsReached","abstract":[{"type":"text","text":"This error indicates that the hardware resources required to create MPS client have been exhausted."}],"type":"topic"},"doc://SwiftCU/SH":{"identifier":"doc:\/\/SwiftCU\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SwiftCU/documentation/SwiftCU/cudaError":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaError","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror","kind":"symbol","navigatorTitle":[{"text":"cudaError","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError","title":"cudaError","abstract":[],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedExecAffinity":{"kind":"symbol","abstract":[{"text":"This indicates that the provided execution affinity is not supported by the device.","type":"text"}],"type":"topic","title":"cudaError.cudaErrorUnsupportedExecAffinity","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupportedexecaffinity","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorUnsupportedExecAffinity","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedExecAffinity"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDuplicateTextureName":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorduplicatetexturename","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorDuplicateTextureName","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDuplicateTextureName","abstract":[{"text":"This indicates that multiple textures (across separate CUDA source","type":"text"},{"text":" ","type":"text"},{"text":"files in the application) share the same string name.","type":"text"}],"title":"cudaError.cudaErrorDuplicateTextureName","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCompatNotSupportedOnDevice":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorCompatNotSupportedOnDevice","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcompatnotsupportedondevice","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCompatNotSupportedOnDevice","title":"cudaError.cudaErrorCompatNotSupportedOnDevice","abstract":[{"text":"This error indicates that the system was upgraded to run with forward compatibility","type":"text"},{"text":" ","type":"text"},{"text":"but the visible hardware detected by CUDA does not support this configuration.","type":"text"},{"text":" ","type":"text"},{"text":"Refer to the compatibility documentation for the supported hardware matrix or ensure","type":"text"},{"text":" ","type":"text"},{"text":"that only supported hardware is visible during initialization via the CUDA_VISIBLE_DEVICES","type":"text"},{"text":" ","type":"text"},{"text":"environment variable.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDevicesUnavailable":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordevicesunavailable","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDevicesUnavailable","title":"cudaError.cudaErrorDevicesUnavailable","abstract":[{"text":"This indicates that all CUDA devices are busy or unavailable at the current","type":"text"},{"text":" ","type":"text"},{"text":"time. Devices are often busy\/unavailable due to use of","type":"text"},{"text":" ","type":"text"},{"text":"::cudaComputeModeProhibited, ::cudaComputeModeExclusiveProcess, or when long","type":"text"},{"text":" ","type":"text"},{"text":"running CUDA kernels have filled up the GPU and are blocking new work","type":"text"},{"text":" ","type":"text"},{"text":"from starting. They can also be unavailable due to memory constraints","type":"text"},{"text":" ","type":"text"},{"text":"on a device that already has active CUDA work being performed.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDevicesUnavailable"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSharedObjectInitFailed":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSharedObjectInitFailed"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsharedobjectinitfailed","title":"cudaError.cudaErrorSharedObjectInitFailed","abstract":[{"text":"This indicates that initialization of a shared object failed.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectInitFailed"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSharedObjectSymbolNotFound":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsharedobjectsymbolnotfound","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSharedObjectSymbolNotFound"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSharedObjectSymbolNotFound","abstract":[{"text":"This indicates that a link to a shared object failed to resolve.","type":"text"}],"title":"cudaError.cudaErrorSharedObjectSymbolNotFound","type":"topic","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSystemNotReady":{"kind":"symbol","abstract":[{"text":"This error indicates that the system is not yet ready to start any CUDA","type":"text"},{"text":" ","type":"text"},{"text":"work.  To continue using CUDA, verify the system configuration is in a","type":"text"},{"text":" ","type":"text"},{"text":"valid state and all required driver daemons are actively running.","type":"text"},{"text":" ","type":"text"},{"text":"More information about this error can be found in the system specific","type":"text"},{"text":" ","type":"text"},{"text":"user guide.","type":"text"}],"type":"topic","title":"cudaError.cudaErrorSystemNotReady","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsystemnotready","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSystemNotReady"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemNotReady"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchFileScopedSurf":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchFileScopedSurf","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchfilescopedsurf","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchFileScopedSurf","title":"cudaError.cudaErrorLaunchFileScopedSurf","abstract":[{"text":"This error indicates that a grid launch did not occur because the kernel","type":"text"},{"text":" ","type":"text"},{"text":"uses file-scoped surfaces which are unsupported by the device runtime.","type":"text"},{"text":" ","type":"text"},{"text":"Kernels launched via the device runtime only support surfaces created with","type":"text"},{"text":" ","type":"text"},{"text":"the Surface Object API’s.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInsufficientDriver":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInsufficientDriver","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinsufficientdriver","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInsufficientDriver","title":"cudaError.cudaErrorInsufficientDriver","abstract":[{"text":"This indicates that the installed NVIDIA CUDA driver is older than the","type":"text"},{"text":" ","type":"text"},{"text":"CUDA runtime library. This is not a supported configuration. Users should","type":"text"},{"text":" ","type":"text"},{"text":"install an updated NVIDIA display driver to allow the application to run.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureWrongThread":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorStreamCaptureWrongThread","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcapturewrongthread","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureWrongThread","title":"cudaError.cudaErrorStreamCaptureWrongThread","abstract":[{"text":"A stream capture sequence not initiated with the ::cudaStreamCaptureModeRelaxed","type":"text"},{"text":" ","type":"text"},{"text":"argument to ::cudaStreamBeginCapture was passed to ::cudaStreamEndCapture in a","type":"text"},{"text":" ","type":"text"},{"text":"different thread.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorContextIsDestroyed":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorContextIsDestroyed","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcontextisdestroyed","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorContextIsDestroyed","title":"cudaError.cudaErrorContextIsDestroyed","abstract":[{"text":"This error indicates that the context current to the calling thread","type":"text"},{"text":" ","type":"text"},{"text":"has been destroyed using ::cuCtxDestroy, or is a primary context which","type":"text"},{"text":" ","type":"text"},{"text":"has not yet been initialized.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPriorLaunchFailure":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorPriorLaunchFailure","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpriorlaunchfailure","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPriorLaunchFailure","title":"cudaError.cudaErrorPriorLaunchFailure","abstract":[{"text":"This indicated that a previous kernel launch failed. This was previously","type":"text"},{"text":" ","type":"text"},{"text":"used for device emulation of kernel launches.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidClusterSize":{"role":"symbol","title":"cudaError.cudaErrorInvalidClusterSize","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidclustersize","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidClusterSize"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidClusterSize","abstract":[{"text":"This indicates that a kernel launch error has occurred due to cluster","type":"text"},{"text":" ","type":"text"},{"text":"misconfiguration.","type":"text"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTextureNotBound":{"role":"symbol","title":"cudaError.cudaErrorTextureNotBound","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortexturenotbound","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorTextureNotBound"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureNotBound","abstract":[{"text":"This indicated that a texture was not bound for access.","type":"text"},{"text":" ","type":"text"},{"text":"This was previously used for device emulation of texture operations.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsClientTerminated":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsclientterminated","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsClientTerminated"}],"title":"cudaError.cudaErrorMpsClientTerminated","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsClientTerminated","abstract":[{"text":"This error indicates that the MPS client has been terminated by the server. To continue using CUDA, the process must be terminated and relaunched.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDeviceNotLicensed":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorDeviceNotLicensed"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordevicenotlicensed","abstract":[{"text":"This indicates that the device doesn’t have a valid Grid License.","type":"text"}],"title":"cudaError.cudaErrorDeviceNotLicensed","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceNotLicensed"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIncompatibleDriverContext":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorIncompatibleDriverContext"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorincompatibledrivercontext","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIncompatibleDriverContext","title":"cudaError.cudaErrorIncompatibleDriverContext","abstract":[{"text":"This indicates that the current context is not compatible with this","type":"text"},{"text":" ","type":"text"},{"text":"the CUDA Runtime. This can only occur if you are using CUDA","type":"text"},{"text":" ","type":"text"},{"text":"Runtime\/Driver interoperability and have created an existing Driver","type":"text"},{"text":" ","type":"text"},{"text":"context using the driver API. The Driver context may be incompatible","type":"text"},{"text":" ","type":"text"},{"text":"either because the Driver context was created using an older version","type":"text"},{"text":" ","type":"text"},{"text":"of the API, because the Runtime API call expects a primary driver","type":"text"},{"text":" ","type":"text"},{"text":"context and the Driver context is not primary, or because the Driver","type":"text"},{"text":" ","type":"text"},{"text":"context has been destroyed. Please see \\ref CUDART_DRIVER “Interactions","type":"text"},{"text":" ","type":"text"},{"text":"with the CUDA Driver API” for more information.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerNotInitialized":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerNotInitialized","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorProfilerNotInitialized","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 5.0. It is no longer an error","type":"text"},{"text":" ","type":"text"},{"text":"to attempt to enable\/disable the profiling via ::cudaProfilerStart or","type":"text"},{"text":" ","type":"text"},{"text":"::cudaProfilerStop without initialization.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofilernotinitialized","title":"cudaError.cudaErrorProfilerNotInitialized","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorTextureFetchFailed":{"role":"symbol","title":"cudaError.cudaErrorTextureFetchFailed","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrortexturefetchfailed","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorTextureFetchFailed"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorTextureFetchFailed","abstract":[{"text":"This indicated that a texture fetch was not able to be performed.","type":"text"},{"text":" ","type":"text"},{"text":"This was previously used for device emulation of texture operations.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was","type":"text"},{"text":" ","type":"text"},{"text":"removed with the CUDA 3.1 release.","type":"text"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCdpNotSupported":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorCdpNotSupported"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcdpnotsupported","kind":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpNotSupported","title":"cudaError.cudaErrorCdpNotSupported","abstract":[{"text":"This error indicates, that the program is using CUDA Dynamic Parallelism, but the current configuration, like MPS, does not support it.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureMerge":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureMerge"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcapturemerge","title":"cudaError.cudaErrorStreamCaptureMerge","abstract":[{"text":"The operation would have resulted in a merge of two independent capture","type":"text"},{"text":" ","type":"text"},{"text":"sequences.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureMerge"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMapBufferObjectFailed":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMapBufferObjectFailed","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorMapBufferObjectFailed","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that the buffer object could not be mapped.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormapbufferobjectfailed","title":"cudaError.cudaErrorMapBufferObjectFailed","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchOutOfResources":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchOutOfResources","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchOutOfResources","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that a launch did not occur because it did not have","type":"text"},{"text":" ","type":"text"},{"text":"appropriate resources. Although this error is similar to","type":"text"},{"text":" ","type":"text"},{"text":"::cudaErrorInvalidConfiguration, this error usually indicates that the","type":"text"},{"text":" ","type":"text"},{"text":"user has attempted to pass too many arguments to the device kernel, or the","type":"text"},{"text":" ","type":"text"},{"text":"kernel launch specifies too many threads for the kernel’s register count.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchoutofresources","title":"cudaError.cudaErrorLaunchOutOfResources","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorApiFailureBase":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorApiFailureBase"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorapifailurebase","abstract":[{"text":"Any unhandled CUDA driver error is added to this value and returned via","type":"text"},{"text":" ","type":"text"},{"text":"the runtime. Production releases of CUDA should not return such errors.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 4.1.","type":"text"}],"title":"cudaError.cudaErrorApiFailureBase","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorApiFailureBase"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerAlreadyStopped":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorProfilerAlreadyStopped"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofileralreadystopped","title":"cudaError.cudaErrorProfilerAlreadyStopped","abstract":[{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 5.0. It is no longer an error","type":"text"},{"text":" ","type":"text"},{"text":"to call cudaProfilerStop() when profiling is already disabled.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerAlreadyStopped"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidHostPointer":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidHostPointer","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidHostPointer","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that at least one host pointer passed to the API call is","type":"text"},{"text":" ","type":"text"},{"text":"not a valid host pointer.","type":"text"},{"text":" ","type":"text"},{"text":"\\deprecated","type":"text"},{"text":" ","type":"text"},{"text":"This error return is deprecated as of CUDA 10.1.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidhostpointer","title":"cudaError.cudaErrorInvalidHostPointer","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotSupported":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorNotSupported"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotsupported","abstract":[{"text":"This error indicates the attempted operation is not supported","type":"text"},{"text":" ","type":"text"},{"text":"on the current system or device.","type":"text"}],"title":"cudaError.cudaErrorNotSupported","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotSupported"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCdpVersionMismatch":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorCdpVersionMismatch"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcdpversionmismatch","title":"cudaError.cudaErrorCdpVersionMismatch","abstract":[{"text":"This error indicates, that the program contains an unsupported interaction between different versions of CUDA Dynamic Parallelism.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCdpVersionMismatch"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidTextureBinding":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidTextureBinding","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidTextureBinding","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that the texture binding is not valid. This occurs if you","type":"text"},{"text":" ","type":"text"},{"text":"call ::cudaGetTextureAlignmentOffset() with an unbound texture.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidtexturebinding","title":"cudaError.cudaErrorInvalidTextureBinding","type":"topic","role":"symbol"},"doc://SwiftCU/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SwiftCU\/SQ"},"doc://SwiftCU/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/SwiftCU\/s8CopyableP"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureIsolation":{"role":"symbol","title":"cudaError.cudaErrorStreamCaptureIsolation","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureisolation","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureIsolation"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureIsolation","abstract":[{"text":"A dependency would have been created which crosses the capture sequence","type":"text"},{"text":" ","type":"text"},{"text":"boundary. Only implicit in-stream ordering dependencies are allowed to","type":"text"},{"text":" ","type":"text"},{"text":"cross the boundary.","type":"text"}],"kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/safetyCheckCondition(message:)":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"safetyCheckCondition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftcu\/cudaerror\/safetycheckcondition(message:)","title":"safetyCheckCondition(message:)","abstract":[{"text":"Checks the condition and throws a precondition failure if the error is not successful.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/safetyCheckCondition(message:)"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInitializationError":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInitializationError","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInitializationError","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"The API call failed because the CUDA driver and runtime could not be","type":"text"},{"text":" ","type":"text"},{"text":"initialized.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinitializationerror","title":"cudaError.cudaErrorInitializationError","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorMpsRpcFailure":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorMpsRpcFailure"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrormpsrpcfailure","abstract":[{"text":"This error indicates that the remote procedural call between the MPS server and the MPS client failed.","type":"text"}],"title":"cudaError.cudaErrorMpsRpcFailure","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorMpsRpcFailure"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnmapBufferObjectFailed":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorUnmapBufferObjectFailed"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunmapbufferobjectfailed","title":"cudaError.cudaErrorUnmapBufferObjectFailed","abstract":[{"text":"This indicates that the buffer object could not be unmapped.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnmapBufferObjectFailed"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCallRequiresNewerDriver":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCallRequiresNewerDriver","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorCallRequiresNewerDriver","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that the API call requires a newer CUDA driver than the one","type":"text"},{"text":" ","type":"text"},{"text":"currently installed. Users should install an updated NVIDIA CUDA driver","type":"text"},{"text":" ","type":"text"},{"text":"to allow the API call to succeed.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcallrequiresnewerdriver","title":"cudaError.cudaErrorCallRequiresNewerDriver","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPeerAccessAlreadyEnabled":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorPeerAccessAlreadyEnabled"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpeeraccessalreadyenabled","abstract":[{"text":"This error indicates that a call to ::cudaDeviceEnablePeerAccess() is","type":"text"},{"text":" ","type":"text"},{"text":"trying to re-enable peer addressing on from a context which has already","type":"text"},{"text":" ","type":"text"},{"text":"had peer addressing enabled.","type":"text"}],"title":"cudaError.cudaErrorPeerAccessAlreadyEnabled","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessAlreadyEnabled"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAlreadyMapped":{"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorAlreadyMapped","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerroralreadymapped","title":"cudaError.cudaErrorAlreadyMapped","abstract":[{"text":"This indicates that the resource is already mapped.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyMapped"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidFilterSetting":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidFilterSetting"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidfiltersetting","abstract":[{"text":"This indicates that a non-float texture was being accessed with linear","type":"text"},{"text":" ","type":"text"},{"text":"filtering. This is not supported by CUDA.","type":"text"}],"title":"cudaError.cudaErrorInvalidFilterSetting","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidFilterSetting"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureUnmatched":{"role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorStreamCaptureUnmatched","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureunmatched","title":"cudaError.cudaErrorStreamCaptureUnmatched","abstract":[{"text":"The capture was not initiated in this stream.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnmatched"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorIllegalInstruction":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorIllegalInstruction"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorillegalinstruction","abstract":[{"text":"The device encountered an illegal instruction during kernel execution","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"title":"cudaError.cudaErrorIllegalInstruction","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorIllegalInstruction"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidConfiguration":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidConfiguration"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidconfiguration","abstract":[{"type":"text","text":"This indicates that a kernel launch is requesting resources that can"},{"type":"text","text":" "},{"type":"text","text":"never be satisfied by the current device. Requesting more shared memory"},{"type":"text","text":" "},{"type":"text","text":"per block than the device supports will trigger this error, as will"},{"type":"text","text":" "},{"type":"text","text":"requesting too many threads or blocks. See ::cudaDeviceProp for more"},{"type":"text","text":" "},{"type":"text","text":"device limitations."}],"title":"cudaError.cudaErrorInvalidConfiguration","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidConfiguration"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedLimit":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorUnsupportedLimit"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupportedlimit","abstract":[{"type":"text","text":"This indicates that the ::cudaLimit passed to the API call is not"},{"type":"text","text":" "},{"type":"text","text":"supported by the active device."}],"title":"cudaError.cudaErrorUnsupportedLimit","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedLimit"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorFileNotFound":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorFileNotFound"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorfilenotfound","abstract":[{"type":"text","text":"This indicates that the file specified was not found."}],"title":"cudaError.cudaErrorFileNotFound","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorFileNotFound"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidPitchValue":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidPitchValue"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidpitchvalue","abstract":[{"type":"text","text":"This indicates that one or more of the pitch-related parameters passed"},{"type":"text","text":" "},{"type":"text","text":"to the API call is not within the acceptable range for pitch."}],"title":"cudaError.cudaErrorInvalidPitchValue","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidPitchValue"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotMappedAsPointer":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotMappedAsPointer","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"This indicates that a mapped resource is not available for access as a","type":"text"},{"text":" ","type":"text"},{"text":"pointer.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotmappedaspointer","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMappedAsPointer","title":"cudaError.cudaErrorNotMappedAsPointer"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSetOnActiveProcess":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSetOnActiveProcess","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorSetOnActiveProcess","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"This indicates that the user has called ::cudaSetValidDevices(),","type":"text"},{"text":" ","type":"text"},{"text":"::cudaSetDeviceFlags(), ::cudaD3D9SetDirect3DDevice(),","type":"text"},{"text":" ","type":"text"},{"text":"::cudaD3D10SetDirect3DDevice, ::cudaD3D11SetDirect3DDevice(), or","type":"text"},{"text":" ","type":"text"},{"text":"::cudaVDPAUSetVDPAUDevice() after initializing the CUDA runtime by","type":"text"},{"text":" ","type":"text"},{"text":"calling non-device management operations (allocating memory and","type":"text"},{"text":" ","type":"text"},{"text":"launching kernels are examples of non-device management operations).","type":"text"},{"text":" ","type":"text"},{"text":"This error can also be returned if using runtime\/driver","type":"text"},{"text":" ","type":"text"},{"text":"interoperability and there is an existing ::CUcontext active on the","type":"text"},{"text":" ","type":"text"},{"text":"host thread.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsetonactiveprocess","title":"cudaError.cudaErrorSetOnActiveProcess","type":"topic","role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidDeviceFunction":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidDeviceFunction","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The requested device function does not exist or is not compiled for the","type":"text"},{"text":" ","type":"text"},{"text":"proper device architecture.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvaliddevicefunction","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDeviceFunction","title":"cudaError.cudaErrorInvalidDeviceFunction"},"doc://SwiftCU/documentation/SwiftCU/cudaError/init(rawValue:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/swiftcu\/cudaerror\/init(rawvalue:)","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/init(rawValue:)","title":"init(rawValue:)"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchIncompatibleTexturing":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchIncompatibleTexturing","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"This error indicates a kernel launch that uses an incompatible texturing","type":"text"},{"text":" ","type":"text"},{"text":"mode.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchincompatibletexturing","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchIncompatibleTexturing","title":"cudaError.cudaErrorLaunchIncompatibleTexturing"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPeerAccessNotEnabled":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpeeraccessnotenabled","role":"symbol","abstract":[{"type":"text","text":"This error indicates that ::cudaDeviceDisablePeerAccess() is trying to"},{"type":"text","text":" "},{"type":"text","text":"disable peer addressing which has not been enabled yet via"},{"type":"text","text":" "},{"type":"text","text":"::cudaDeviceEnablePeerAccess()."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorPeerAccessNotEnabled"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessNotEnabled","type":"topic","kind":"symbol","title":"cudaError.cudaErrorPeerAccessNotEnabled"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaSuccess":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaSuccess","type":"topic","abstract":[{"text":"The API call returned with no errors. In the case of query calls, this","type":"text"},{"text":" ","type":"text"},{"text":"also means that the operation being queried is complete (see","type":"text"},{"text":" ","type":"text"},{"text":"::cudaEventQuery() and ::cudaStreamQuery()).","type":"text"}],"role":"symbol","title":"cudaError.cudaSuccess","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaSuccess","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudasuccess"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorNotMapped":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorNotMapped","type":"topic","abstract":[{"text":"This indicates that a resource is not mapped.","type":"text"}],"role":"symbol","title":"cudaError.cudaErrorNotMapped","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorNotMapped","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrornotmapped"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorHostMemoryNotRegistered":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorHostMemoryNotRegistered","type":"topic","abstract":[{"text":"This error indicates that the pointer passed to ::cudaHostUnregister()","type":"text"},{"text":" ","type":"text"},{"text":"does not correspond to any currently registered memory region.","type":"text"}],"role":"symbol","title":"cudaError.cudaErrorHostMemoryNotRegistered","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorHostMemoryNotRegistered","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorhostmemorynotregistered"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorLaunchMaxDepthExceeded":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorLaunchMaxDepthExceeded","type":"topic","abstract":[{"text":"This error indicates that a device runtime grid launch did not occur","type":"text"},{"text":" ","type":"text"},{"text":"because the depth of the child grid would exceed the maximum supported","type":"text"},{"text":" ","type":"text"},{"text":"number of nested grid launches.","type":"text"}],"role":"symbol","title":"cudaError.cudaErrorLaunchMaxDepthExceeded","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorLaunchMaxDepthExceeded","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorlaunchmaxdepthexceeded"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorPeerAccessUnsupported":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorPeerAccessUnsupported","type":"topic","abstract":[{"text":"This error indicates that P2P access is not supported across the given","type":"text"},{"text":" ","type":"text"},{"text":"devices.","type":"text"}],"role":"symbol","title":"cudaError.cudaErrorPeerAccessUnsupported","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorPeerAccessUnsupported","kind":"identifier"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorpeeraccessunsupported"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedPtxVersion":{"kind":"symbol","title":"cudaError.cudaErrorUnsupportedPtxVersion","role":"symbol","abstract":[{"text":"This indicates that the provided PTX was compiled with an unsupported toolchain.","type":"text"},{"text":" ","type":"text"},{"text":"The most common reason for this, is the PTX was generated by a compiler newer","type":"text"},{"text":" ","type":"text"},{"text":"than what is supported by the CUDA driver and PTX JIT compiler.","type":"text"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupportedptxversion","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorUnsupportedPtxVersion"}],"type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedPtxVersion"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidDevice":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvaliddevice","title":"cudaError.cudaErrorInvalidDevice","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidDevice"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidDevice","abstract":[{"type":"text","text":"This indicates that the device ordinal supplied by the user does not"},{"type":"text","text":" "},{"type":"text","text":"correspond to a valid CUDA device or that the action requested is"},{"type":"text","text":" "},{"type":"text","text":"invalid for the specified device."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSystemDriverMismatch":{"type":"topic","title":"cudaError.cudaErrorSystemDriverMismatch","role":"symbol","abstract":[{"type":"text","text":"This error indicates that there is a mismatch between the versions of"},{"type":"text","text":" "},{"type":"text","text":"the display driver and the CUDA driver. Refer to the compatibility documentation"},{"type":"text","text":" "},{"type":"text","text":"for supported versions."}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsystemdrivermismatch","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSystemDriverMismatch"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSystemDriverMismatch","kind":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnsupportedDevSideSync":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnsupportedDevSideSync","title":"cudaError.cudaErrorUnsupportedDevSideSync","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorUnsupportedDevSideSync"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunsupporteddevsidesync","abstract":[{"type":"text","text":"This indicates that the code to be compiled by the PTX JIT contains"},{"type":"text","text":" "},{"type":"text","text":"unsupported call to cudaDeviceSynchronize."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidGraphicsContext":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidGraphicsContext","title":"cudaError.cudaErrorInvalidGraphicsContext","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorInvalidGraphicsContext"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidgraphicscontext","abstract":[{"type":"text","text":"This indicates an error with the OpenGL or DirectX context."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStartupFailure":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStartupFailure","title":"cudaError.cudaErrorStartupFailure","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStartupFailure"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstartupfailure","abstract":[{"type":"text","text":"This indicates an internal startup failure in the CUDA runtime."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCapturedEvent":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCapturedEvent","title":"cudaError.cudaErrorCapturedEvent","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorCapturedEvent"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcapturedevent","abstract":[{"type":"text","text":"The operation is not permitted on an event which was last recorded in a"},{"type":"text","text":" "},{"type":"text","text":"capturing stream."}]},"doc://SwiftCU/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/SwiftCU\/SY"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidAddressSpace":{"title":"cudaError.cudaErrorInvalidAddressSpace","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidAddressSpace","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidAddressSpace","kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidaddressspace","abstract":[{"text":"While executing a kernel, the device encountered an instruction","type":"text"},{"text":" ","type":"text"},{"text":"which can only operate on memory locations in certain address spaces","type":"text"},{"text":" ","type":"text"},{"text":"(global, shared, or local), but was supplied a memory address not","type":"text"},{"text":" ","type":"text"},{"text":"belonging to an allowed address space.","type":"text"},{"text":" ","type":"text"},{"text":"This leaves the process in an inconsistent state and any further CUDA work","type":"text"},{"text":" ","type":"text"},{"text":"will return the same error. To continue using CUDA, the process must be terminated","type":"text"},{"text":" ","type":"text"},{"text":"and relaunched.","type":"text"}],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorCooperativeLaunchTooLarge":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorCooperativeLaunchTooLarge","abstract":[{"type":"text","text":"This error indicates that the number of blocks launched per grid for a kernel that was"},{"type":"text","text":" "},{"type":"text","text":"launched via either ::cudaLaunchCooperativeKernel or ::cudaLaunchCooperativeKernelMultiDevice"},{"type":"text","text":" "},{"type":"text","text":"exceeds the maximum number of blocks as allowed by ::cudaOccupancyMaxActiveBlocksPerMultiprocessor"},{"type":"text","text":" "},{"type":"text","text":"or ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags times the number of multiprocessors"},{"type":"text","text":" "},{"type":"text","text":"as specified by the device attribute ::cudaDevAttrMultiProcessorCount."}],"role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorcooperativelaunchtoolarge","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorCooperativeLaunchTooLarge"}],"title":"cudaError.cudaErrorCooperativeLaunchTooLarge"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSymbolNotFound":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsymbolnotfound","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSymbolNotFound"}],"title":"cudaError.cudaErrorSymbolNotFound","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSymbolNotFound","kind":"symbol","abstract":[{"type":"text","text":"This indicates that a named symbol was not found. Examples of symbols"},{"type":"text","text":" "},{"type":"text","text":"are global\/constant variable names, driver function names, texture names,"},{"type":"text","text":" "},{"type":"text","text":"and surface names."}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorAlreadyAcquired":{"title":"cudaError.cudaErrorAlreadyAcquired","url":"\/documentation\/swiftcu\/cudaerror\/cudaerroralreadyacquired","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorAlreadyAcquired","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"This indicates that a resource has already been acquired."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorAlreadyAcquired"}],"role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureInvalidated":{"title":"cudaError.cudaErrorStreamCaptureInvalidated","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureinvalidated","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureInvalidated","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The current capture sequence on the stream has been invalidated due to"},{"type":"text","text":" "},{"type":"text","text":"a previous error."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureInvalidated"}],"role":"symbol"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorDeviceAlreadyInUse":{"title":"cudaError.cudaErrorDeviceAlreadyInUse","kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrordevicealreadyinuse","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorDeviceAlreadyInUse","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorDeviceAlreadyInUse","role":"symbol","abstract":[{"text":"This indicates that a call tried to access an exclusive-thread device that","type":"text"},{"text":" ","type":"text"},{"text":"is already in use by a different thread.","type":"text"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidSource":{"title":"cudaError.cudaErrorInvalidSource","kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidsource","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidSource","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSource","role":"symbol","abstract":[{"text":"This indicates that the device kernel source is invalid.","type":"text"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/Equatable-Implementations":{"kind":"article","role":"collectionGroup","url":"\/documentation\/swiftcu\/cudaerror\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/Equatable-Implementations","abstract":[],"type":"topic"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorInvalidSurface":{"title":"cudaError.cudaErrorInvalidSurface","kind":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorinvalidsurface","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorInvalidSurface","kind":"identifier"}],"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorInvalidSurface","role":"symbol","abstract":[{"text":"This indicates that the surface passed to the API call is not a valid","type":"text"},{"text":" ","type":"text"},{"text":"surface.","type":"text"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureUnsupported":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureunsupported","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorStreamCaptureUnsupported"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The operation is not permitted when the stream is capturing."}],"title":"cudaError.cudaErrorStreamCaptureUnsupported","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureUnsupported"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorProfilerDisabled":{"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorprofilerdisabled","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorProfilerDisabled"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"This indicates profiler is not initialized for this run. This can"},{"type":"text","text":" "},{"type":"text","text":"happen when the application is running with external profiling tools"},{"type":"text","text":" "},{"type":"text","text":"like visual profiler."}],"title":"cudaError.cudaErrorProfilerDisabled","role":"symbol","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorProfilerDisabled"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorStreamCaptureImplicit":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorStreamCaptureImplicit","title":"cudaError.cudaErrorStreamCaptureImplicit","kind":"symbol","abstract":[{"text":"The operation would have resulted in a disallowed implicit dependency on","type":"text"},{"text":" ","type":"text"},{"text":"a current capture sequence from cudaStreamLegacy.","type":"text"}],"role":"symbol","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorstreamcaptureimplicit","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cudaErrorStreamCaptureImplicit","kind":"identifier"}]},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorSynchronizationError":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorSynchronizationError"}],"url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorsynchronizationerror","abstract":[{"type":"text","text":"This indicated that a synchronization operation had failed."},{"type":"text","text":" "},{"type":"text","text":"This was previously used for some device emulation functions."},{"type":"text","text":" "},{"type":"text","text":"\\deprecated"},{"type":"text","text":" "},{"type":"text","text":"This error return is deprecated as of CUDA 3.1. Device emulation mode was"},{"type":"text","text":" "},{"type":"text","text":"removed with the CUDA 3.1 release."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorSynchronizationError","title":"cudaError.cudaErrorSynchronizationError"},"doc://SwiftCU/documentation/SwiftCU/cudaError/cudaErrorUnknown":{"identifier":"doc:\/\/SwiftCU\/documentation\/SwiftCU\/cudaError\/cudaErrorUnknown","title":"cudaError.cudaErrorUnknown","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cudaErrorUnknown"}],"role":"symbol","abstract":[{"type":"text","text":"This indicates that an unknown internal error has occurred."}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftcu\/cudaerror\/cudaerrorunknown"}}}